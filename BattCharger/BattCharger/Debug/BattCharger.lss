
BattCharger.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b8  00800100  00001704  00001798  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001704  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  008001b8  008001b8  00001850  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001850  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000018ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  000018e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011a2  00000000  00000000  00001a38  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000566  00000000  00000000  00002bda  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b0e  00000000  00000000  00003140  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000358  00000000  00000000  00003c50  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003d2  00000000  00000000  00003fa8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b74  00000000  00000000  0000437a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  00004eee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c6 c0       	rjmp	.+396    	; 0x18e <__ctors_end>
       2:	00 00       	nop
       4:	e2 c0       	rjmp	.+452    	; 0x1ca <__bad_interrupt>
       6:	00 00       	nop
       8:	e0 c0       	rjmp	.+448    	; 0x1ca <__bad_interrupt>
       a:	00 00       	nop
       c:	de c0       	rjmp	.+444    	; 0x1ca <__bad_interrupt>
       e:	00 00       	nop
      10:	dc c0       	rjmp	.+440    	; 0x1ca <__bad_interrupt>
      12:	00 00       	nop
      14:	da c0       	rjmp	.+436    	; 0x1ca <__bad_interrupt>
      16:	00 00       	nop
      18:	d8 c0       	rjmp	.+432    	; 0x1ca <__bad_interrupt>
      1a:	00 00       	nop
      1c:	d6 c0       	rjmp	.+428    	; 0x1ca <__bad_interrupt>
      1e:	00 00       	nop
      20:	d4 c0       	rjmp	.+424    	; 0x1ca <__bad_interrupt>
      22:	00 00       	nop
      24:	d2 c0       	rjmp	.+420    	; 0x1ca <__bad_interrupt>
      26:	00 00       	nop
      28:	d0 c0       	rjmp	.+416    	; 0x1ca <__bad_interrupt>
      2a:	00 00       	nop
      2c:	ce c0       	rjmp	.+412    	; 0x1ca <__bad_interrupt>
      2e:	00 00       	nop
      30:	cc c0       	rjmp	.+408    	; 0x1ca <__bad_interrupt>
      32:	00 00       	nop
      34:	d1 c0       	rjmp	.+418    	; 0x1d8 <__vector_13>
      36:	00 00       	nop
      38:	c8 c0       	rjmp	.+400    	; 0x1ca <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c6 c0       	rjmp	.+396    	; 0x1ca <__bad_interrupt>
      3e:	00 00       	nop
      40:	c4 c0       	rjmp	.+392    	; 0x1ca <__bad_interrupt>
      42:	00 00       	nop
      44:	c2 c0       	rjmp	.+388    	; 0x1ca <__bad_interrupt>
      46:	00 00       	nop
      48:	c0 c0       	rjmp	.+384    	; 0x1ca <__bad_interrupt>
      4a:	00 00       	nop
      4c:	be c0       	rjmp	.+380    	; 0x1ca <__bad_interrupt>
      4e:	00 00       	nop
      50:	bc c0       	rjmp	.+376    	; 0x1ca <__bad_interrupt>
      52:	00 00       	nop
      54:	ba c0       	rjmp	.+372    	; 0x1ca <__bad_interrupt>
      56:	00 00       	nop
      58:	b8 c0       	rjmp	.+368    	; 0x1ca <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b6 c0       	rjmp	.+364    	; 0x1ca <__bad_interrupt>
      5e:	00 00       	nop
      60:	b4 c0       	rjmp	.+360    	; 0x1ca <__bad_interrupt>
      62:	00 00       	nop
      64:	b2 c0       	rjmp	.+356    	; 0x1ca <__bad_interrupt>
      66:	00 00       	nop
      68:	b0 c0       	rjmp	.+352    	; 0x1ca <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ae c0       	rjmp	.+348    	; 0x1ca <__bad_interrupt>
      6e:	00 00       	nop
      70:	ac c0       	rjmp	.+344    	; 0x1ca <__bad_interrupt>
      72:	00 00       	nop
      74:	aa c0       	rjmp	.+340    	; 0x1ca <__bad_interrupt>
      76:	00 00       	nop
      78:	a8 c0       	rjmp	.+336    	; 0x1ca <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a6 c0       	rjmp	.+332    	; 0x1ca <__bad_interrupt>
      7e:	00 00       	nop
      80:	a4 c0       	rjmp	.+328    	; 0x1ca <__bad_interrupt>
      82:	00 00       	nop
      84:	a2 c0       	rjmp	.+324    	; 0x1ca <__bad_interrupt>
      86:	00 00       	nop
      88:	a0 c0       	rjmp	.+320    	; 0x1ca <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	6e 61       	ori	r22, 0x1E	; 30
      8e:	6e 00       	.word	0x006e	; ????

00000090 <__c.2177>:
      90:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      a0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      b0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      c0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      d0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      e0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      f0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     100:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     110:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     120:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     130:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     140:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     150:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     160:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     170:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     180:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000018e <__ctors_end>:
     18e:	11 24       	eor	r1, r1
     190:	1f be       	out	0x3f, r1	; 63
     192:	cf ef       	ldi	r28, 0xFF	; 255
     194:	d0 e1       	ldi	r29, 0x10	; 16
     196:	de bf       	out	0x3e, r29	; 62
     198:	cd bf       	out	0x3d, r28	; 61

0000019a <__do_copy_data>:
     19a:	11 e0       	ldi	r17, 0x01	; 1
     19c:	a0 e0       	ldi	r26, 0x00	; 0
     19e:	b1 e0       	ldi	r27, 0x01	; 1
     1a0:	e4 e0       	ldi	r30, 0x04	; 4
     1a2:	f7 e1       	ldi	r31, 0x17	; 23
     1a4:	00 e0       	ldi	r16, 0x00	; 0
     1a6:	0b bf       	out	0x3b, r16	; 59
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x14>
     1aa:	07 90       	elpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	a8 3b       	cpi	r26, 0xB8	; 184
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0x10>

000001b4 <__do_clear_bss>:
     1b4:	21 e0       	ldi	r18, 0x01	; 1
     1b6:	a8 eb       	ldi	r26, 0xB8	; 184
     1b8:	b1 e0       	ldi	r27, 0x01	; 1
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <.do_clear_bss_start>

000001bc <.do_clear_bss_loop>:
     1bc:	1d 92       	st	X+, r1

000001be <.do_clear_bss_start>:
     1be:	ae 3b       	cpi	r26, 0xBE	; 190
     1c0:	b2 07       	cpc	r27, r18
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <.do_clear_bss_loop>
     1c4:	d0 d1       	rcall	.+928    	; 0x566 <main>
     1c6:	0c 94 80 0b 	jmp	0x1700	; 0x1700 <_exit>

000001ca <__bad_interrupt>:
     1ca:	1a cf       	rjmp	.-460    	; 0x0 <__vectors>

000001cc <uart_putchar>:
      _delay_us(15.0);
      SETBIT(PORTC,0);              // Pull clock line high
   }
   SETBIT(PORTC,2);                 // Before we leave, make clock line high 
   deselectAlpha();  
}
     1cc:	5d 9b       	sbis	0x0b, 5	; 11
     1ce:	fe cf       	rjmp	.-4      	; 0x1cc <uart_putchar>
     1d0:	8c b9       	out	0x0c, r24	; 12
     1d2:	80 e0       	ldi	r24, 0x00	; 0
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	08 95       	ret

000001d8 <__vector_13>:
     1d8:	1f 92       	push	r1
     1da:	0f 92       	push	r0
     1dc:	0f b6       	in	r0, 0x3f	; 63
     1de:	0f 92       	push	r0
     1e0:	11 24       	eor	r1, r1
     1e2:	0f 90       	pop	r0
     1e4:	0f be       	out	0x3f, r0	; 63
     1e6:	0f 90       	pop	r0
     1e8:	1f 90       	pop	r1
     1ea:	18 95       	reti

000001ec <resetDAC>:
     1ec:	cf 93       	push	r28
     1ee:	c8 2f       	mov	r28, r24
     1f0:	8e e5       	ldi	r24, 0x5E	; 94
     1f2:	9d d2       	rcall	.+1338   	; 0x72e <i2c_start_wait>
     1f4:	80 e1       	ldi	r24, 0x10	; 16
     1f6:	8c 0f       	add	r24, r28
     1f8:	cb d2       	rcall	.+1430   	; 0x790 <i2c_write>
     1fa:	c1 d2       	rcall	.+1410   	; 0x77e <i2c_stop>
     1fc:	1f 92       	push	r1
     1fe:	cf 93       	push	r28
     200:	8e e0       	ldi	r24, 0x0E	; 14
     202:	91 e0       	ldi	r25, 0x01	; 1
     204:	9f 93       	push	r25
     206:	8f 93       	push	r24
     208:	0e 94 b0 0a 	call	0x1560	; 0x1560 <printf>
     20c:	0f 90       	pop	r0
     20e:	0f 90       	pop	r0
     210:	0f 90       	pop	r0
     212:	0f 90       	pop	r0
     214:	cf 91       	pop	r28
     216:	08 95       	ret

00000218 <setDACValue>:
     218:	cf 92       	push	r12
     21a:	df 92       	push	r13
     21c:	ef 92       	push	r14
     21e:	ff 92       	push	r15
     220:	cf 93       	push	r28
     222:	c8 2f       	mov	r28, r24
     224:	cb 01       	movw	r24, r22
     226:	ba 01       	movw	r22, r20
     228:	20 e0       	ldi	r18, 0x00	; 0
     22a:	30 e0       	ldi	r19, 0x00	; 0
     22c:	a9 01       	movw	r20, r18
     22e:	d9 d2       	rcall	.+1458   	; 0x7e2 <__addsf3>
     230:	20 e0       	ldi	r18, 0x00	; 0
     232:	30 e0       	ldi	r19, 0x00	; 0
     234:	48 ec       	ldi	r20, 0xC8	; 200
     236:	52 e4       	ldi	r21, 0x42	; 66
     238:	5e d4       	rcall	.+2236   	; 0xaf6 <__mulsf3>
     23a:	20 e0       	ldi	r18, 0x00	; 0
     23c:	30 e0       	ldi	r19, 0x00	; 0
     23e:	4f e7       	ldi	r20, 0x7F	; 127
     240:	53 e4       	ldi	r21, 0x43	; 67
     242:	59 d4       	rcall	.+2226   	; 0xaf6 <__mulsf3>
     244:	6b 01       	movw	r12, r22
     246:	7c 01       	movw	r14, r24
     248:	8e e5       	ldi	r24, 0x5E	; 94
     24a:	71 d2       	rcall	.+1250   	; 0x72e <i2c_start_wait>
     24c:	8c 2f       	mov	r24, r28
     24e:	a0 d2       	rcall	.+1344   	; 0x790 <i2c_write>
     250:	20 e0       	ldi	r18, 0x00	; 0
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	4a ef       	ldi	r20, 0xFA	; 250
     256:	53 e4       	ldi	r21, 0x43	; 67
     258:	c7 01       	movw	r24, r14
     25a:	b6 01       	movw	r22, r12
     25c:	26 d3       	rcall	.+1612   	; 0x8aa <__divsf3>
     25e:	20 e0       	ldi	r18, 0x00	; 0
     260:	30 e0       	ldi	r19, 0x00	; 0
     262:	40 e0       	ldi	r20, 0x00	; 0
     264:	5f e3       	ldi	r21, 0x3F	; 63
     266:	bd d2       	rcall	.+1402   	; 0x7e2 <__addsf3>
     268:	88 d3       	rcall	.+1808   	; 0x97a <__fixunssfsi>
     26a:	86 2f       	mov	r24, r22
     26c:	91 d2       	rcall	.+1314   	; 0x790 <i2c_write>
     26e:	87 d2       	rcall	.+1294   	; 0x77e <i2c_stop>
     270:	cf 91       	pop	r28
     272:	ff 90       	pop	r15
     274:	ef 90       	pop	r14
     276:	df 90       	pop	r13
     278:	cf 90       	pop	r12
     27a:	08 95       	ret

0000027c <selectAlpha>:
     27c:	aa 98       	cbi	0x15, 2	; 21
     27e:	08 95       	ret

00000280 <deselectAlpha>:
     280:	aa 9a       	sbi	0x15, 2	; 21
     282:	08 95       	ret

00000284 <sendAlphaWord>:
// Send a word (16 bits) to the alphanumeric display
// The MSB is the digit to be written to (0,1,2,3)
// The LSB is the data to write at that digit.

void sendAlphaWord(uint16_t c)   
{
     284:	cf 93       	push	r28
     286:	df 93       	push	r29
     288:	ec 01       	movw	r28, r24
   int i;
   
   SETBIT(PORTC,0);                 // Make sure Clock line is high
     28a:	a8 9a       	sbi	0x15, 0	; 21
   selectAlpha();
     28c:	f7 df       	rcall	.-18     	; 0x27c <selectAlpha>
     28e:	2f e0       	ldi	r18, 0x0F	; 15
     290:	30 e0       	ldi	r19, 0x00	; 0
      
   // Now shift out 8 bits, with MSB first
   
   for (i=0;i<=15;i++){
      
      if (CHECKBIT(c,(15-i)))
     292:	61 e0       	ldi	r22, 0x01	; 1
     294:	70 e0       	ldi	r23, 0x00	; 0
     296:	ab 01       	movw	r20, r22
     298:	02 2e       	mov	r0, r18
     29a:	02 c0       	rjmp	.+4      	; 0x2a0 <sendAlphaWord+0x1c>
     29c:	44 0f       	add	r20, r20
     29e:	55 1f       	adc	r21, r21
     2a0:	0a 94       	dec	r0
     2a2:	e2 f7       	brpl	.-8      	; 0x29c <sendAlphaWord+0x18>
     2a4:	4c 23       	and	r20, r28
     2a6:	5d 23       	and	r21, r29
     2a8:	45 2b       	or	r20, r21
     2aa:	11 f0       	breq	.+4      	; 0x2b0 <sendAlphaWord+0x2c>
         SETBIT(PORTC,1);
     2ac:	a9 9a       	sbi	0x15, 1	; 21
     2ae:	01 c0       	rjmp	.+2      	; 0x2b2 <sendAlphaWord+0x2e>
      else
         CLEARBIT(PORTC,1);
     2b0:	a9 98       	cbi	0x15, 1	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2b2:	81 e3       	ldi	r24, 0x31	; 49
     2b4:	8a 95       	dec	r24
     2b6:	f1 f7       	brne	.-4      	; 0x2b4 <sendAlphaWord+0x30>
     2b8:	00 00       	nop
      
      // Make a (negative) clock pulse
      
      _delay_us(10.0);
      CLEARBIT(PORTC,0);            // Pull clock line low
     2ba:	a8 98       	cbi	0x15, 0	; 21
     2bc:	8a e4       	ldi	r24, 0x4A	; 74
     2be:	8a 95       	dec	r24
     2c0:	f1 f7       	brne	.-4      	; 0x2be <sendAlphaWord+0x3a>
      _delay_us(15.0);
      SETBIT(PORTC,0);              // Pull clock line high
     2c2:	a8 9a       	sbi	0x15, 0	; 21
     2c4:	21 50       	subi	r18, 0x01	; 1
     2c6:	31 09       	sbc	r19, r1
     2c8:	30 f7       	brcc	.-52     	; 0x296 <sendAlphaWord+0x12>
   }
   SETBIT(PORTC,2);                 // Before we leave, make clock line high
     2ca:	aa 9a       	sbi	0x15, 2	; 21
   deselectAlpha();
     2cc:	d9 df       	rcall	.-78     	; 0x280 <deselectAlpha>
}
     2ce:	df 91       	pop	r29
     2d0:	cf 91       	pop	r28
     2d2:	08 95       	ret

000002d4 <initAlpha>:

void initAlpha()  // Initializes the alphanumeric display   
{
   DDRC = DDRC | _BV(0);   // Clock line
     2d4:	a0 9a       	sbi	0x14, 0	; 20
   DDRC = DDRC | _BV(1);   // Data line
     2d6:	a1 9a       	sbi	0x14, 1	; 20
   DDRC = DDRC | _BV(2);   // ~Select line
     2d8:	a2 9a       	sbi	0x14, 2	; 20
   
   SETBIT(PORTC,0);        // Clock high
     2da:	a8 9a       	sbi	0x15, 0	; 21
   SETBIT(PORTC,2);        // Make SELECT high, which unselects the alpha interface   
     2dc:	aa 9a       	sbi	0x15, 2	; 21
     2de:	08 95       	ret

000002e0 <testAlpha>:

void testAlpha(void)       // Driver to test the Alphanumeric display
{
   uint16_t data;
   
   initAlpha();
     2e0:	f9 df       	rcall	.-14     	; 0x2d4 <initAlpha>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2e2:	26 e6       	ldi	r18, 0x66	; 102
     2e4:	86 ee       	ldi	r24, 0xE6	; 230
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	21 50       	subi	r18, 0x01	; 1
     2ea:	80 40       	sbci	r24, 0x00	; 0
     2ec:	90 40       	sbci	r25, 0x00	; 0
     2ee:	e1 f7       	brne	.-8      	; 0x2e8 <testAlpha+0x8>
   _delay_ms(20);
      
   data = (0 << 8) | '1';
   sendAlphaWord(data);
     2f0:	81 e3       	ldi	r24, 0x31	; 49
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	c7 df       	rcall	.-114    	; 0x284 <sendAlphaWord>
     2f6:	26 e6       	ldi	r18, 0x66	; 102
     2f8:	86 ee       	ldi	r24, 0xE6	; 230
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	21 50       	subi	r18, 0x01	; 1
     2fe:	80 40       	sbci	r24, 0x00	; 0
     300:	90 40       	sbci	r25, 0x00	; 0
     302:	e1 f7       	brne	.-8      	; 0x2fc <testAlpha+0x1c>
   _delay_ms(20);
   
   data = (1 << 8) | '0';
   sendAlphaWord(data);
     304:	80 e3       	ldi	r24, 0x30	; 48
     306:	91 e0       	ldi	r25, 0x01	; 1
     308:	bd df       	rcall	.-134    	; 0x284 <sendAlphaWord>
     30a:	26 e6       	ldi	r18, 0x66	; 102
     30c:	86 ee       	ldi	r24, 0xE6	; 230
     30e:	90 e0       	ldi	r25, 0x00	; 0
     310:	21 50       	subi	r18, 0x01	; 1
     312:	80 40       	sbci	r24, 0x00	; 0
     314:	90 40       	sbci	r25, 0x00	; 0
     316:	e1 f7       	brne	.-8      	; 0x310 <testAlpha+0x30>
   _delay_ms(20);   

   data = (2 << 8) | '0';
   sendAlphaWord(data);
     318:	80 e3       	ldi	r24, 0x30	; 48
     31a:	92 e0       	ldi	r25, 0x02	; 2
     31c:	b3 df       	rcall	.-154    	; 0x284 <sendAlphaWord>
     31e:	26 e6       	ldi	r18, 0x66	; 102
     320:	86 ee       	ldi	r24, 0xE6	; 230
     322:	90 e0       	ldi	r25, 0x00	; 0
     324:	21 50       	subi	r18, 0x01	; 1
     326:	80 40       	sbci	r24, 0x00	; 0
     328:	90 40       	sbci	r25, 0x00	; 0
     32a:	e1 f7       	brne	.-8      	; 0x324 <testAlpha+0x44>
   _delay_ms(20);
   
   data = (3 << 8) | '%';
   sendAlphaWord(data);
     32c:	85 e2       	ldi	r24, 0x25	; 37
     32e:	93 e0       	ldi	r25, 0x03	; 3
     330:	a9 df       	rcall	.-174    	; 0x284 <sendAlphaWord>
     332:	8f ef       	ldi	r24, 0xFF	; 255
     334:	9f e8       	ldi	r25, 0x8F	; 143
     336:	01 97       	sbiw	r24, 0x01	; 1
     338:	f1 f7       	brne	.-4      	; 0x336 <testAlpha+0x56>
     33a:	00 c0       	rjmp	.+0      	; 0x33c <testAlpha+0x5c>
     33c:	00 00       	nop
     33e:	08 95       	ret

00000340 <setLED>:
}


 void setLED(unsigned char state)   // Sets the indicator LED ON or OFF
 {
    SETBIT(DDRB,4);            // Make PORTB.4 output
     340:	bc 9a       	sbi	0x17, 4	; 23
    switch(state)  {
     342:	81 30       	cpi	r24, 0x01	; 1
     344:	21 f0       	breq	.+8      	; 0x34e <setLED+0xe>
     346:	28 f0       	brcs	.+10     	; 0x352 <setLED+0x12>
     348:	82 30       	cpi	r24, 0x02	; 2
     34a:	29 f0       	breq	.+10     	; 0x356 <setLED+0x16>
     34c:	08 95       	ret
      case ON:  
         CLEARBIT(PORTB,4);
     34e:	c4 98       	cbi	0x18, 4	; 24
         break;
     350:	08 95       	ret
      case OFF:
         SETBIT(PORTB,4);
     352:	c4 9a       	sbi	0x18, 4	; 24
         break;
     354:	08 95       	ret
      case TOGGLE:
         FLIPBIT(PORTB,4);
     356:	98 b3       	in	r25, 0x18	; 24
     358:	80 e1       	ldi	r24, 0x10	; 16
     35a:	89 27       	eor	r24, r25
     35c:	88 bb       	out	0x18, r24	; 24
     35e:	08 95       	ret

00000360 <getCurrent>:
 }
 

 
float getCurrent(void)
{
     360:	cf 93       	push	r28
     362:	df 93       	push	r29
    
   // The voltage across the shunt resistor is in register 1 of the INA219 chip.
   // The first thing we do is to tell the chip we will be reading from this
   // register.
   
   i2c_start_wait(DevISENSE+I2C_WRITE);   // This wait for the ACK from the INA219
     364:	80 e8       	ldi	r24, 0x80	; 128
     366:	e3 d1       	rcall	.+966    	; 0x72e <i2c_start_wait>
   i2c_write(0x01);                       // If we were configuring the chip we would
     368:	81 e0       	ldi	r24, 0x01	; 1
     36a:	12 d2       	rcall	.+1060   	; 0x790 <i2c_write>
   i2c_stop();                            // send config data.  For now just stop.
     36c:	08 d2       	rcall	.+1040   	; 0x77e <i2c_stop>

   // The read will come from the last address we wrote to, which is
   // register 1, where the shunt voltage is.     
      
   i2c_start_wait(DevISENSE+I2C_READ);		// Issue START and then send the address
     36e:	81 e8       	ldi	r24, 0x81	; 129
     370:	de d1       	rcall	.+956    	; 0x72e <i2c_start_wait>
   c1 = i2c_readAck();                    // Get MSB of the shunt voltage
     372:	20 d2       	rcall	.+1088   	; 0x7b4 <i2c_readAck>
     374:	d8 2f       	mov	r29, r24
   c2 = i2c_readNak();                    // Get LSB of the shunt voltage
     376:	29 d2       	rcall	.+1106   	; 0x7ca <i2c_readNak>
     378:	c8 2f       	mov	r28, r24
   i2c_stop();
     37a:	01 d2       	rcall	.+1026   	; 0x77e <i2c_stop>
     
   current = (c1 << 8) | c2;
     37c:	6c 2f       	mov	r22, r28
     37e:	70 e0       	ldi	r23, 0x00	; 0
     380:	7d 2b       	or	r23, r29
   
   // The voltage across the shunt is in mV and the shunt is 0.1 Ohm.
   // Multiply measured values by 1e-4 to convert to A.
   
   tmp = (float)(current)*(1.0e-4);
     382:	07 2e       	mov	r0, r23
     384:	00 0c       	add	r0, r0
     386:	88 0b       	sbc	r24, r24
     388:	99 0b       	sbc	r25, r25
     38a:	25 d3       	rcall	.+1610   	; 0x9d6 <__floatsisf>
     38c:	27 e1       	ldi	r18, 0x17	; 23
     38e:	37 eb       	ldi	r19, 0xB7	; 183
     390:	41 ed       	ldi	r20, 0xD1	; 209
     392:	58 e3       	ldi	r21, 0x38	; 56
     394:	b0 d3       	rcall	.+1888   	; 0xaf6 <__mulsf3>
   return(tmp);
}
     396:	df 91       	pop	r29
     398:	cf 91       	pop	r28
     39a:	08 95       	ret

0000039c <getAveCurrent>:

float getAveCurrent(unsigned char n)
{
     39c:	bf 92       	push	r11
     39e:	cf 92       	push	r12
     3a0:	df 92       	push	r13
     3a2:	ef 92       	push	r14
     3a4:	ff 92       	push	r15
     3a6:	0f 93       	push	r16
     3a8:	1f 93       	push	r17
     3aa:	cf 93       	push	r28
     3ac:	df 93       	push	r29
     3ae:	b8 2e       	mov	r11, r24
   float total;
   int i;
   
   total = 0;
   for (i=0;i<=n;i++){
     3b0:	08 2f       	mov	r16, r24
     3b2:	10 e0       	ldi	r17, 0x00	; 0
     3b4:	c0 e0       	ldi	r28, 0x00	; 0
     3b6:	d0 e0       	ldi	r29, 0x00	; 0
     3b8:	c1 2c       	mov	r12, r1
     3ba:	d1 2c       	mov	r13, r1
     3bc:	76 01       	movw	r14, r12
      total = total + getCurrent();
     3be:	d0 df       	rcall	.-96     	; 0x360 <getCurrent>
     3c0:	9b 01       	movw	r18, r22
     3c2:	ac 01       	movw	r20, r24
     3c4:	c7 01       	movw	r24, r14
     3c6:	b6 01       	movw	r22, r12
     3c8:	0c d2       	rcall	.+1048   	; 0x7e2 <__addsf3>
     3ca:	6b 01       	movw	r12, r22
     3cc:	7c 01       	movw	r14, r24
     3ce:	8f ef       	ldi	r24, 0xFF	; 255
     3d0:	9f e8       	ldi	r25, 0x8F	; 143
     3d2:	01 97       	sbiw	r24, 0x01	; 1
     3d4:	f1 f7       	brne	.-4      	; 0x3d2 <getAveCurrent+0x36>
     3d6:	00 c0       	rjmp	.+0      	; 0x3d8 <getAveCurrent+0x3c>
     3d8:	00 00       	nop
{
   float total;
   int i;
   
   total = 0;
   for (i=0;i<=n;i++){
     3da:	21 96       	adiw	r28, 0x01	; 1
     3dc:	0c 17       	cp	r16, r28
     3de:	1d 07       	cpc	r17, r29
     3e0:	74 f7       	brge	.-36     	; 0x3be <getAveCurrent+0x22>
      total = total + getCurrent();
      _delay_ms(10);
   }
   return(total/(float)n);
     3e2:	6b 2d       	mov	r22, r11
     3e4:	70 e0       	ldi	r23, 0x00	; 0
     3e6:	80 e0       	ldi	r24, 0x00	; 0
     3e8:	90 e0       	ldi	r25, 0x00	; 0
     3ea:	f3 d2       	rcall	.+1510   	; 0x9d2 <__floatunsisf>
     3ec:	9b 01       	movw	r18, r22
     3ee:	ac 01       	movw	r20, r24
     3f0:	c7 01       	movw	r24, r14
     3f2:	b6 01       	movw	r22, r12
     3f4:	5a d2       	rcall	.+1204   	; 0x8aa <__divsf3>
}
     3f6:	df 91       	pop	r29
     3f8:	cf 91       	pop	r28
     3fa:	1f 91       	pop	r17
     3fc:	0f 91       	pop	r16
     3fe:	ff 90       	pop	r15
     400:	ef 90       	pop	r14
     402:	df 90       	pop	r13
     404:	cf 90       	pop	r12
     406:	bf 90       	pop	r11
     408:	08 95       	ret

0000040a <selectSPI>:
   deselectSPI(); 
}

void selectSPI(void) // Pull CS line low.
{
    PORTB = PORTB & (~0x01);
     40a:	c0 98       	cbi	0x18, 0	; 24
     40c:	08 95       	ret

0000040e <deselectSPI>:
}

void deselectSPI(void)  // Pull CS line high
{
   PORTB    = PORTB | 0x01; 
     40e:	c0 9a       	sbi	0x18, 0	; 24
     410:	08 95       	ret

00000412 <clockSPI>:
}
void clockSPI()
{
     PORTB = PORTB | 0b00000010; // make clock line high
     412:	c1 9a       	sbi	0x18, 1	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     414:	85 e0       	ldi	r24, 0x05	; 5
     416:	8a 95       	dec	r24
     418:	f1 f7       	brne	.-4      	; 0x416 <clockSPI+0x4>
     _delay_us(1.0);
     PORTB = PORTB & 0b11111101; // make clock line low 
     41a:	c1 98       	cbi	0x18, 1	; 24
     41c:	08 95       	ret

0000041e <writeSPI>:
}
void writeSPI(unsigned char c)
{
     41e:	1f 93       	push	r17
     420:	cf 93       	push	r28
     422:	df 93       	push	r29
     424:	18 2f       	mov	r17, r24
     426:	d8 e0       	ldi	r29, 0x08	; 8
   unsigned char i, msk;
   
   msk = 0x80;
     428:	c0 e8       	ldi	r28, 0x80	; 128
   for (i=0;i<=7;i++){
      if ((c & msk) == 0)
     42a:	9c 2f       	mov	r25, r28
     42c:	91 23       	and	r25, r17
     42e:	21 f4       	brne	.+8      	; 0x438 <writeSPI+0x1a>
         PORTB = PORTB & 0x1111011;        
     430:	98 b3       	in	r25, 0x18	; 24
     432:	91 71       	andi	r25, 0x11	; 17
     434:	98 bb       	out	0x18, r25	; 24
     436:	01 c0       	rjmp	.+2      	; 0x43a <writeSPI+0x1c>
      else
         PORTB = PORTB | 0b0000100;    
     438:	c2 9a       	sbi	0x18, 2	; 24
      msk = msk >> 1;
     43a:	c6 95       	lsr	r28
     clockSPI();
     43c:	ea df       	rcall	.-44     	; 0x412 <clockSPI>
     43e:	d1 50       	subi	r29, 0x01	; 1
void writeSPI(unsigned char c)
{
   unsigned char i, msk;
   
   msk = 0x80;
   for (i=0;i<=7;i++){
     440:	a1 f7       	brne	.-24     	; 0x42a <writeSPI+0xc>
      else
         PORTB = PORTB | 0b0000100;    
      msk = msk >> 1;
     clockSPI();
   }
}
     442:	df 91       	pop	r29
     444:	cf 91       	pop	r28
     446:	1f 91       	pop	r17
     448:	08 95       	ret

0000044a <configureMAX31856>:
   value = (temp/128.0f);
   return(value);
}
void configureMAX31856(void)
{
   selectSPI();
     44a:	df df       	rcall	.-66     	; 0x40a <selectSPI>
   writeSPI(0x80);   // Select MAX31856 register 0 in write mode
     44c:	80 e8       	ldi	r24, 0x80	; 128
     44e:	e7 df       	rcall	.-50     	; 0x41e <writeSPI>
   writeSPI(0x80);   // Program is to do automatic conversions (every 100 ms)
     450:	80 e8       	ldi	r24, 0x80	; 128
     452:	e5 df       	rcall	.-54     	; 0x41e <writeSPI>
   deselectSPI(); 
     454:	dc cf       	rjmp	.-72     	; 0x40e <deselectSPI>
     456:	08 95       	ret

00000458 <readSPI>:
     clockSPI();
   }
}

unsigned char readSPI()
{
     458:	1f 93       	push	r17
     45a:	cf 93       	push	r28
     45c:	df 93       	push	r29
     45e:	c8 e0       	ldi	r28, 0x08	; 8
  unsigned char i, msk, c; 
   c = 0;
     460:	10 e0       	ldi	r17, 0x00	; 0
   msk = 0x80;
     462:	d0 e8       	ldi	r29, 0x80	; 128
   for (i=0;i<=7;i++){
      clockSPI();
     464:	d6 df       	rcall	.-84     	; 0x412 <clockSPI>
      if ((PINB & 0b0001000)==0) 
     466:	b3 99       	sbic	0x16, 3	; 22
         ;
      else
         c = c | msk;
     468:	1d 2b       	or	r17, r29
      msk = msk >> 1;    
     46a:	d6 95       	lsr	r29
     46c:	c1 50       	subi	r28, 0x01	; 1
unsigned char readSPI()
{
  unsigned char i, msk, c; 
   c = 0;
   msk = 0x80;
   for (i=0;i<=7;i++){
     46e:	d1 f7       	brne	.-12     	; 0x464 <readSPI+0xc>
      else
         c = c | msk;
      msk = msk >> 1;    
   } 
   return(c);
}
     470:	81 2f       	mov	r24, r17
     472:	df 91       	pop	r29
     474:	cf 91       	pop	r28
     476:	1f 91       	pop	r17
     478:	08 95       	ret

0000047a <getTemperature>:
   }
   return(total/(float)n);
}

float getTemperature(void)
{
     47a:	1f 93       	push	r17
     47c:	cf 93       	push	r28
     47e:	df 93       	push	r29
   unsigned char c1,c2,c3;
   int32_t temp;
   float value;
      
   selectSPI();
     480:	c4 df       	rcall	.-120    	; 0x40a <selectSPI>
   writeSPI(0x0C);      // Start reading at register 0x0C
     482:	8c e0       	ldi	r24, 0x0C	; 12
     484:	cc df       	rcall	.-104    	; 0x41e <writeSPI>
   c1 = readSPI();      // Read register and increment to 0x0D 
     486:	e8 df       	rcall	.-48     	; 0x458 <readSPI>
     488:	c8 2f       	mov	r28, r24
   c2 = readSPI();      // Read register and increment to 0x0F
     48a:	e6 df       	rcall	.-52     	; 0x458 <readSPI>
     48c:	d8 2f       	mov	r29, r24
   c3 = readSPI();      // Read register
     48e:	e4 df       	rcall	.-56     	; 0x458 <readSPI>
     490:	18 2f       	mov	r17, r24
   deselectSPI();
     492:	bd df       	rcall	.-134    	; 0x40e <deselectSPI>
   
   // Now pack bytes and convert to float.
   
   temp =((c1 & 0xFF) << 11); 
   temp |=((c2 & 0xFF) << 3); 
     494:	6d 2f       	mov	r22, r29
     496:	70 e0       	ldi	r23, 0x00	; 0
     498:	66 0f       	add	r22, r22
     49a:	77 1f       	adc	r23, r23
     49c:	66 0f       	add	r22, r22
     49e:	77 1f       	adc	r23, r23
     4a0:	66 0f       	add	r22, r22
     4a2:	77 1f       	adc	r23, r23
   c3 = readSPI();      // Read register
   deselectSPI();
   
   // Now pack bytes and convert to float.
   
   temp =((c1 & 0xFF) << 11); 
     4a4:	2c 2f       	mov	r18, r28
     4a6:	30 e0       	ldi	r19, 0x00	; 0
     4a8:	32 2f       	mov	r19, r18
     4aa:	22 27       	eor	r18, r18
     4ac:	33 0f       	add	r19, r19
     4ae:	33 0f       	add	r19, r19
     4b0:	33 0f       	add	r19, r19
   temp |=((c2 & 0xFF) << 3); 
     4b2:	62 2b       	or	r22, r18
     4b4:	73 2b       	or	r23, r19
     4b6:	cb 01       	movw	r24, r22
     4b8:	77 0f       	add	r23, r23
     4ba:	aa 0b       	sbc	r26, r26
     4bc:	bb 0b       	sbc	r27, r27
   temp |=((c3 & 0xFF) >> 5); 
     4be:	12 95       	swap	r17
     4c0:	16 95       	lsr	r17
     4c2:	17 70       	andi	r17, 0x07	; 7
     4c4:	bc 01       	movw	r22, r24
     4c6:	cd 01       	movw	r24, r26
     4c8:	61 2b       	or	r22, r17
   value = (temp/128.0f);
     4ca:	85 d2       	rcall	.+1290   	; 0x9d6 <__floatsisf>
     4cc:	20 e0       	ldi	r18, 0x00	; 0
     4ce:	30 e0       	ldi	r19, 0x00	; 0
     4d0:	40 e0       	ldi	r20, 0x00	; 0
     4d2:	5c e3       	ldi	r21, 0x3C	; 60
     4d4:	10 d3       	rcall	.+1568   	; 0xaf6 <__mulsf3>
   return(value);
}
     4d6:	df 91       	pop	r29
     4d8:	cf 91       	pop	r28
     4da:	1f 91       	pop	r17
     4dc:	08 95       	ret

000004de <initSPI>:
   return(c);
}

void initSPI(void)
{
   DDRB = DDRB | _BV(0) | _BV(1) | _BV(2);  // Set MOSI and SCK output, all others input
     4de:	87 b3       	in	r24, 0x17	; 23
     4e0:	87 60       	ori	r24, 0x07	; 7
     4e2:	87 bb       	out	0x17, r24	; 23
   PORTB = PORTB | 0x01;                    // Chip select high
     4e4:	c0 9a       	sbi	0x18, 0	; 24
   PORTB = PORTB & 0b11111101;              // make clock line low   
     4e6:	c1 98       	cbi	0x18, 1	; 24
     4e8:	08 95       	ret

000004ea <initUART>:
   

// Initialize serial port 0 to 9600 8N1

void initUART(void){  
   UBRR0L = BAUD_PRESCALE;
     4ea:	8f e5       	ldi	r24, 0x5F	; 95
     4ec:	89 b9       	out	0x09, r24	; 9
   UBRR0H = (BAUD_PRESCALE >> 8); 
     4ee:	10 92 90 00 	sts	0x0090, r1
   UCSR0B = ((1<<TXEN)|(1<<RXEN));
     4f2:	88 e1       	ldi	r24, 0x18	; 24
     4f4:	8a b9       	out	0x0a, r24	; 10
     4f6:	08 95       	ret

000004f8 <initADC>:
}

void initADC(void)
{
   // AREF = AVcc
   ADMUX = (1<<REFS0);
     4f8:	80 e4       	ldi	r24, 0x40	; 64
     4fa:	87 b9       	out	0x07, r24	; 7
   
   // ADC Enable and prescaler of 128
   // 16000000/128 = 125000
   ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
     4fc:	87 e8       	ldi	r24, 0x87	; 135
     4fe:	86 b9       	out	0x06, r24	; 6
     500:	08 95       	ret

00000502 <readADC>:
{
   // Select the corresponding channel 0 through 7.  For our
   // application we could have hard coded the channel number.
   
   ch &= 0b00000111;
   ADMUX = (ADMUX & 0xF8) |ch;
     502:	97 b1       	in	r25, 0x07	; 7
uint16_t readADC(uint8_t ch)
{
   // Select the corresponding channel 0 through 7.  For our
   // application we could have hard coded the channel number.
   
   ch &= 0b00000111;
     504:	87 70       	andi	r24, 0x07	; 7
   ADMUX = (ADMUX & 0xF8) |ch;
     506:	98 7f       	andi	r25, 0xF8	; 248
     508:	89 2b       	or	r24, r25
     50a:	87 b9       	out	0x07, r24	; 7
     50c:	81 e3       	ldi	r24, 0x31	; 49
     50e:	8a 95       	dec	r24
     510:	f1 f7       	brne	.-4      	; 0x50e <readADC+0xc>
     512:	00 00       	nop
   // ADCSRA. The wait for the ADSC bit to become 0, which signals
   // the end of the conversion. Delay needed for the stabilization 
   // of the ADC input voltage.
   
   _delay_us(10.0); 
   ADCSRA |= (1<<ADSC);
     514:	36 9a       	sbi	0x06, 6	; 6
   while(ADCSRA & (1<<ADSC))
     516:	36 99       	sbic	0x06, 6	; 6
     518:	fe cf       	rjmp	.-4      	; 0x516 <readADC+0x14>
      ;
   return (ADC);
     51a:	84 b1       	in	r24, 0x04	; 4
     51c:	95 b1       	in	r25, 0x05	; 5
}
     51e:	08 95       	ret

00000520 <getValue>:

void getValue(void)
{	uint16_t d;
   float v;
   
   d = readADC(0);
     520:	80 e0       	ldi	r24, 0x00	; 0
     522:	ef df       	rcall	.-34     	; 0x502 <readADC>
   v = ((float)(d*5))/(1023.0);
     524:	bc 01       	movw	r22, r24
     526:	66 0f       	add	r22, r22
     528:	77 1f       	adc	r23, r23
     52a:	66 0f       	add	r22, r22
     52c:	77 1f       	adc	r23, r23
     52e:	86 0f       	add	r24, r22
     530:	97 1f       	adc	r25, r23
     532:	bc 01       	movw	r22, r24
     534:	80 e0       	ldi	r24, 0x00	; 0
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	4c d2       	rcall	.+1176   	; 0x9d2 <__floatunsisf>
     53a:	20 e0       	ldi	r18, 0x00	; 0
     53c:	30 ec       	ldi	r19, 0xC0	; 192
     53e:	4f e7       	ldi	r20, 0x7F	; 127
     540:	54 e4       	ldi	r21, 0x44	; 68
     542:	b3 d1       	rcall	.+870    	; 0x8aa <__divsf3>
   printf("v = %6.3f V\r\n",v);
     544:	9f 93       	push	r25
     546:	8f 93       	push	r24
     548:	7f 93       	push	r23
     54a:	6f 93       	push	r22
     54c:	8e e1       	ldi	r24, 0x1E	; 30
     54e:	91 e0       	ldi	r25, 0x01	; 1
     550:	9f 93       	push	r25
     552:	8f 93       	push	r24
     554:	0e 94 b0 0a 	call	0x1560	; 0x1560 <printf>
     558:	0f 90       	pop	r0
     55a:	0f 90       	pop	r0
     55c:	0f 90       	pop	r0
     55e:	0f 90       	pop	r0
     560:	0f 90       	pop	r0
     562:	0f 90       	pop	r0
     564:	08 95       	ret

00000566 <main>:

void initPWM(void);
void setPWM(float duty);

int main(void)
{
     566:	cf 93       	push	r28
     568:	df 93       	push	r29
     56a:	cd b7       	in	r28, 0x3d	; 61
     56c:	de b7       	in	r29, 0x3e	; 62
     56e:	2a 97       	sbiw	r28, 0x0a	; 10
     570:	0f b6       	in	r0, 0x3f	; 63
     572:	f8 94       	cli
     574:	de bf       	out	0x3e, r29	; 62
     576:	0f be       	out	0x3f, r0	; 63
     578:	cd bf       	out	0x3d, r28	; 61
   char buff[10];
   uint16_t txt;
 
   // Initialize the alphanumeric display.
    
   initAlpha();
     57a:	ac de       	rcall	.-680    	; 0x2d4 <initAlpha>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     57c:	2f ef       	ldi	r18, 0xFF	; 255
     57e:	8f e7       	ldi	r24, 0x7F	; 127
     580:	94 e0       	ldi	r25, 0x04	; 4
     582:	21 50       	subi	r18, 0x01	; 1
     584:	80 40       	sbci	r24, 0x00	; 0
     586:	90 40       	sbci	r25, 0x00	; 0
     588:	e1 f7       	brne	.-8      	; 0x582 <main+0x1c>
     58a:	00 c0       	rjmp	.+0      	; 0x58c <main+0x26>
     58c:	00 00       	nop
   _delay_ms(100);
   testAlpha();    
     58e:	a8 de       	rcall	.-688    	; 0x2e0 <testAlpha>
   
   // Fire up the USART and print a welcome message.    
   
   initUART();
     590:	ac df       	rcall	.-168    	; 0x4ea <initUART>
   stdout = &mystdout;
     592:	80 e0       	ldi	r24, 0x00	; 0
     594:	91 e0       	ldi	r25, 0x01	; 1
     596:	90 93 bb 01 	sts	0x01BB, r25
     59a:	80 93 ba 01 	sts	0x01BA, r24
   printf("Multiple Chemistry Battery Charger.  Version (1.0) \r\n");
     59e:	8c e2       	ldi	r24, 0x2C	; 44
     5a0:	91 e0       	ldi	r25, 0x01	; 1
     5a2:	f1 d7       	rcall	.+4066   	; 0x1586 <puts>

   // Initialize the SPI and I2C buses and the peripherals.
       
   initSPI();              // SPI is used by the MAX31856 thermocouple interface
     5a4:	9c df       	rcall	.-200    	; 0x4de <initSPI>
   configureMAX31856();   
     5a6:	51 df       	rcall	.-350    	; 0x44a <configureMAX31856>
   i2c_init();             // I2C is used by the INA219 current sensor
     5a8:	bc d0       	rcall	.+376    	; 0x722 <i2c_init>
     5aa:	af ef       	ldi	r26, 0xFF	; 255
     5ac:	bf e7       	ldi	r27, 0x7F	; 127
     5ae:	26 e1       	ldi	r18, 0x16	; 22
     5b0:	a1 50       	subi	r26, 0x01	; 1
     5b2:	b0 40       	sbci	r27, 0x00	; 0
     5b4:	20 40       	sbci	r18, 0x00	; 0
     5b6:	e1 f7       	brne	.-8      	; 0x5b0 <main+0x4a>
     5b8:	00 c0       	rjmp	.+0      	; 0x5ba <main+0x54>
     5ba:	00 00       	nop
   _delay_ms(500.0);
       
   // Initialize the DAC.

   resetDAC(0);		      // Reset channel 0
     5bc:	80 e0       	ldi	r24, 0x00	; 0
     5be:	16 de       	rcall	.-980    	; 0x1ec <resetDAC>
   resetDAC(1);		      // Reset channel 1    
     5c0:	81 e0       	ldi	r24, 0x01	; 1
     5c2:	14 de       	rcall	.-984    	; 0x1ec <resetDAC>
   setDACValue(0,Vout);
     5c4:	40 e0       	ldi	r20, 0x00	; 0
     5c6:	50 e0       	ldi	r21, 0x00	; 0
     5c8:	60 e6       	ldi	r22, 0x60	; 96
     5ca:	70 e4       	ldi	r23, 0x40	; 64
     5cc:	80 e0       	ldi	r24, 0x00	; 0
     5ce:	24 de       	rcall	.-952    	; 0x218 <setDACValue>
   
   // Initialize the ADC.
   
   initADC();
     5d0:	93 df       	rcall	.-218    	; 0x4f8 <initADC>
   getValue();
     5d2:	a6 df       	rcall	.-180    	; 0x520 <getValue>

int main(void)
{
   float temp,current;
   float Ilimit = 0.13;     // Limit current to 130 mA.
   float Vout = 3.50;
     5d4:	0f 2e       	mov	r0, r31
     5d6:	41 2c       	mov	r4, r1
     5d8:	51 2c       	mov	r5, r1
     5da:	f0 e6       	ldi	r31, 0x60	; 96
     5dc:	6f 2e       	mov	r6, r31
     5de:	f0 e4       	ldi	r31, 0x40	; 64
     5e0:	7f 2e       	mov	r7, r31
     5e2:	f0 2d       	mov	r31, r0
      current = getAveCurrent(100);
      while (current >= Ilimit){
         Vout = Vout - 0.05;
         setDACValue(0,Vout);
         current = getAveCurrent(100);         
         printf("Reducing current to: %5.3f A\r\n",current);
     5e4:	0f 2e       	mov	r0, r31
     5e6:	f1 e6       	ldi	r31, 0x61	; 97
     5e8:	8f 2e       	mov	r8, r31
     5ea:	f1 e0       	ldi	r31, 0x01	; 1
     5ec:	9f 2e       	mov	r9, r31
     5ee:	f0 2d       	mov	r31, r0
          
      }
      
      initAlpha();
      sprintf(buff,"%3d",(char)(current*1000));
     5f0:	ce 01       	movw	r24, r28
     5f2:	01 96       	adiw	r24, 0x01	; 1
     5f4:	1c 01       	movw	r2, r24
   
   while (1){ 
      
      // Current limit
      
      current = getAveCurrent(100);
     5f6:	84 e6       	ldi	r24, 0x64	; 100
     5f8:	d1 de       	rcall	.-606    	; 0x39c <getAveCurrent>
     5fa:	16 2f       	mov	r17, r22
     5fc:	07 2f       	mov	r16, r23
     5fe:	b8 2e       	mov	r11, r24
     600:	a9 2e       	mov	r10, r25
      while (current >= Ilimit){
     602:	28 eb       	ldi	r18, 0xB8	; 184
     604:	3e e1       	ldi	r19, 0x1E	; 30
     606:	45 e0       	ldi	r20, 0x05	; 5
     608:	5e e3       	ldi	r21, 0x3E	; 62
     60a:	71 d2       	rcall	.+1250   	; 0xaee <__gesf2>
     60c:	88 23       	and	r24, r24
     60e:	5c f1       	brlt	.+86     	; 0x666 <main+0x100>
         Vout = Vout - 0.05;
     610:	2d ec       	ldi	r18, 0xCD	; 205
     612:	3c ec       	ldi	r19, 0xCC	; 204
     614:	4c e4       	ldi	r20, 0x4C	; 76
     616:	5d e3       	ldi	r21, 0x3D	; 61
     618:	c3 01       	movw	r24, r6
     61a:	b2 01       	movw	r22, r4
     61c:	e1 d0       	rcall	.+450    	; 0x7e0 <__subsf3>
     61e:	2b 01       	movw	r4, r22
     620:	3c 01       	movw	r6, r24
         setDACValue(0,Vout);
     622:	ab 01       	movw	r20, r22
     624:	bc 01       	movw	r22, r24
     626:	80 e0       	ldi	r24, 0x00	; 0
     628:	f7 dd       	rcall	.-1042   	; 0x218 <setDACValue>
         current = getAveCurrent(100);         
     62a:	84 e6       	ldi	r24, 0x64	; 100
     62c:	b7 de       	rcall	.-658    	; 0x39c <getAveCurrent>
     62e:	16 2f       	mov	r17, r22
     630:	07 2f       	mov	r16, r23
     632:	b8 2e       	mov	r11, r24
     634:	a9 2e       	mov	r10, r25
         printf("Reducing current to: %5.3f A\r\n",current);
     636:	9f 93       	push	r25
     638:	8f 93       	push	r24
     63a:	7f 93       	push	r23
     63c:	6f 93       	push	r22
     63e:	9f 92       	push	r9
     640:	8f 92       	push	r8
     642:	8e d7       	rcall	.+3868   	; 0x1560 <printf>
   while (1){ 
      
      // Current limit
      
      current = getAveCurrent(100);
      while (current >= Ilimit){
     644:	0f 90       	pop	r0
     646:	0f 90       	pop	r0
     648:	0f 90       	pop	r0
     64a:	0f 90       	pop	r0
     64c:	0f 90       	pop	r0
     64e:	0f 90       	pop	r0
     650:	28 eb       	ldi	r18, 0xB8	; 184
     652:	3e e1       	ldi	r19, 0x1E	; 30
     654:	45 e0       	ldi	r20, 0x05	; 5
     656:	5e e3       	ldi	r21, 0x3E	; 62
     658:	61 2f       	mov	r22, r17
     65a:	70 2f       	mov	r23, r16
     65c:	8b 2d       	mov	r24, r11
     65e:	9a 2d       	mov	r25, r10
     660:	46 d2       	rcall	.+1164   	; 0xaee <__gesf2>
     662:	88 23       	and	r24, r24
     664:	ac f6       	brge	.-86     	; 0x610 <main+0xaa>
         current = getAveCurrent(100);         
         printf("Reducing current to: %5.3f A\r\n",current);
          
      }
      
      initAlpha();
     666:	36 de       	rcall	.-916    	; 0x2d4 <initAlpha>
      sprintf(buff,"%3d",(char)(current*1000));
     668:	20 e0       	ldi	r18, 0x00	; 0
     66a:	30 e0       	ldi	r19, 0x00	; 0
     66c:	4a e7       	ldi	r20, 0x7A	; 122
     66e:	54 e4       	ldi	r21, 0x44	; 68
     670:	61 2f       	mov	r22, r17
     672:	70 2f       	mov	r23, r16
     674:	8b 2d       	mov	r24, r11
     676:	9a 2d       	mov	r25, r10
     678:	3e d2       	rcall	.+1148   	; 0xaf6 <__mulsf3>
     67a:	7f d1       	rcall	.+766    	; 0x97a <__fixunssfsi>
     67c:	1f 92       	push	r1
     67e:	6f 93       	push	r22
     680:	a0 e8       	ldi	r26, 0x80	; 128
     682:	b1 e0       	ldi	r27, 0x01	; 1
     684:	bf 93       	push	r27
     686:	af 93       	push	r26
     688:	3f 92       	push	r3
     68a:	2f 92       	push	r2
     68c:	ac d7       	rcall	.+3928   	; 0x15e6 <sprintf>
      printf("-> %s\r\n",buff);
     68e:	3f 92       	push	r3
     690:	2f 92       	push	r2
     692:	a4 e8       	ldi	r26, 0x84	; 132
     694:	b1 e0       	ldi	r27, 0x01	; 1
     696:	bf 93       	push	r27
     698:	af 93       	push	r26
     69a:	62 d7       	rcall	.+3780   	; 0x1560 <printf>
      txt = (0<<8 | buff[0]);
     69c:	89 81       	ldd	r24, Y+1	; 0x01
      sendAlphaWord(txt);
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	f1 dd       	rcall	.-1054   	; 0x284 <sendAlphaWord>
     6a2:	86 e6       	ldi	r24, 0x66	; 102
     6a4:	96 ee       	ldi	r25, 0xE6	; 230
     6a6:	a0 e0       	ldi	r26, 0x00	; 0
     6a8:	81 50       	subi	r24, 0x01	; 1
     6aa:	90 40       	sbci	r25, 0x00	; 0
     6ac:	a0 40       	sbci	r26, 0x00	; 0
     6ae:	e1 f7       	brne	.-8      	; 0x6a8 <main+0x142>
      _delay_ms(20);
      txt = (1<<8 | buff[1]);
     6b0:	8a 81       	ldd	r24, Y+2	; 0x02
     6b2:	90 e0       	ldi	r25, 0x00	; 0
      sendAlphaWord(txt);
     6b4:	91 60       	ori	r25, 0x01	; 1
     6b6:	e6 dd       	rcall	.-1076   	; 0x284 <sendAlphaWord>
     6b8:	b6 e6       	ldi	r27, 0x66	; 102
     6ba:	26 ee       	ldi	r18, 0xE6	; 230
     6bc:	80 e0       	ldi	r24, 0x00	; 0
     6be:	b1 50       	subi	r27, 0x01	; 1
     6c0:	20 40       	sbci	r18, 0x00	; 0
     6c2:	80 40       	sbci	r24, 0x00	; 0
     6c4:	e1 f7       	brne	.-8      	; 0x6be <main+0x158>
      _delay_ms(20);
      txt = (2<<8 | buff[2]);
     6c6:	8b 81       	ldd	r24, Y+3	; 0x03
     6c8:	90 e0       	ldi	r25, 0x00	; 0
      sendAlphaWord(txt);
     6ca:	92 60       	ori	r25, 0x02	; 2
     6cc:	db dd       	rcall	.-1098   	; 0x284 <sendAlphaWord>
     6ce:	96 e6       	ldi	r25, 0x66	; 102
     6d0:	a6 ee       	ldi	r26, 0xE6	; 230
     6d2:	b0 e0       	ldi	r27, 0x00	; 0
     6d4:	91 50       	subi	r25, 0x01	; 1
     6d6:	a0 40       	sbci	r26, 0x00	; 0
     6d8:	b0 40       	sbci	r27, 0x00	; 0
     6da:	e1 f7       	brne	.-8      	; 0x6d4 <main+0x16e>
       _delay_ms(20);      
      txt = (3<<8 | 'A');
      sendAlphaWord(txt);
     6dc:	81 e4       	ldi	r24, 0x41	; 65
     6de:	93 e0       	ldi	r25, 0x03	; 3
     6e0:	d1 dd       	rcall	.-1118   	; 0x284 <sendAlphaWord>

                  
      temp = getTemperature();       
     6e2:	cb de       	rcall	.-618    	; 0x47a <getTemperature>
      printf("Current = %5.3f A, Temperature = %5.1f C\r\n",current,temp);
     6e4:	9f 93       	push	r25
     6e6:	8f 93       	push	r24
     6e8:	7f 93       	push	r23
     6ea:	6f 93       	push	r22
     6ec:	af 92       	push	r10
     6ee:	bf 92       	push	r11
     6f0:	0f 93       	push	r16
     6f2:	1f 93       	push	r17
     6f4:	ac e8       	ldi	r26, 0x8C	; 140
     6f6:	b1 e0       	ldi	r27, 0x01	; 1
     6f8:	bf 93       	push	r27
     6fa:	af 93       	push	r26
     6fc:	31 d7       	rcall	.+3682   	; 0x1560 <printf>
      getValue();
     6fe:	10 df       	rcall	.-480    	; 0x520 <getValue>
     700:	8f ef       	ldi	r24, 0xFF	; 255
     702:	9f e7       	ldi	r25, 0x7F	; 127
     704:	a6 e1       	ldi	r26, 0x16	; 22
     706:	81 50       	subi	r24, 0x01	; 1
     708:	90 40       	sbci	r25, 0x00	; 0
     70a:	a0 40       	sbci	r26, 0x00	; 0
     70c:	e1 f7       	brne	.-8      	; 0x706 <main+0x1a0>
     70e:	00 c0       	rjmp	.+0      	; 0x710 <main+0x1aa>
     710:	00 00       	nop
     712:	0f b6       	in	r0, 0x3f	; 63
     714:	f8 94       	cli
     716:	de bf       	out	0x3e, r29	; 62
     718:	0f be       	out	0x3f, r0	; 63
     71a:	cd bf       	out	0x3d, r28	; 61
      _delay_ms(500);
      setLED(TOGGLE);    
     71c:	82 e0       	ldi	r24, 0x02	; 2
     71e:	10 de       	rcall	.-992    	; 0x340 <setLED>
    }   
     720:	6a cf       	rjmp	.-300    	; 0x5f6 <main+0x90>

00000722 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
     722:	10 92 71 00 	sts	0x0071, r1
     726:	80 e2       	ldi	r24, 0x20	; 32
     728:	80 93 70 00 	sts	0x0070, r24
     72c:	08 95       	ret

0000072e <i2c_start_wait>:
     72e:	cf 93       	push	r28
     730:	df 93       	push	r29
     732:	e4 e7       	ldi	r30, 0x74	; 116
     734:	f0 e0       	ldi	r31, 0x00	; 0
     736:	24 ea       	ldi	r18, 0xA4	; 164
     738:	a1 e7       	ldi	r26, 0x71	; 113
     73a:	b0 e0       	ldi	r27, 0x00	; 0
     73c:	c3 e7       	ldi	r28, 0x73	; 115
     73e:	d0 e0       	ldi	r29, 0x00	; 0
     740:	34 e8       	ldi	r19, 0x84	; 132
     742:	44 e9       	ldi	r20, 0x94	; 148
     744:	20 83       	st	Z, r18
     746:	90 81       	ld	r25, Z
     748:	99 23       	and	r25, r25
     74a:	ec f7       	brge	.-6      	; 0x746 <i2c_start_wait+0x18>
     74c:	9c 91       	ld	r25, X
     74e:	98 7f       	andi	r25, 0xF8	; 248
     750:	98 30       	cpi	r25, 0x08	; 8
     752:	11 f0       	breq	.+4      	; 0x758 <i2c_start_wait+0x2a>
     754:	90 31       	cpi	r25, 0x10	; 16
     756:	b1 f7       	brne	.-20     	; 0x744 <i2c_start_wait+0x16>
     758:	88 83       	st	Y, r24
     75a:	30 83       	st	Z, r19
     75c:	90 81       	ld	r25, Z
     75e:	99 23       	and	r25, r25
     760:	ec f7       	brge	.-6      	; 0x75c <i2c_start_wait+0x2e>
     762:	9c 91       	ld	r25, X
     764:	98 7f       	andi	r25, 0xF8	; 248
     766:	90 32       	cpi	r25, 0x20	; 32
     768:	11 f0       	breq	.+4      	; 0x76e <i2c_start_wait+0x40>
     76a:	98 35       	cpi	r25, 0x58	; 88
     76c:	29 f4       	brne	.+10     	; 0x778 <i2c_start_wait+0x4a>
     76e:	40 83       	st	Z, r20
     770:	90 81       	ld	r25, Z
     772:	94 fd       	sbrc	r25, 4
     774:	fd cf       	rjmp	.-6      	; 0x770 <i2c_start_wait+0x42>
     776:	e6 cf       	rjmp	.-52     	; 0x744 <i2c_start_wait+0x16>
     778:	df 91       	pop	r29
     77a:	cf 91       	pop	r28
     77c:	08 95       	ret

0000077e <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     77e:	84 e9       	ldi	r24, 0x94	; 148
     780:	80 93 74 00 	sts	0x0074, r24
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
     784:	e4 e7       	ldi	r30, 0x74	; 116
     786:	f0 e0       	ldi	r31, 0x00	; 0
     788:	80 81       	ld	r24, Z
     78a:	84 fd       	sbrc	r24, 4
     78c:	fd cf       	rjmp	.-6      	; 0x788 <i2c_stop+0xa>

}/* i2c_stop */
     78e:	08 95       	ret

00000790 <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     790:	80 93 73 00 	sts	0x0073, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     794:	84 e8       	ldi	r24, 0x84	; 132
     796:	80 93 74 00 	sts	0x0074, r24

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     79a:	e4 e7       	ldi	r30, 0x74	; 116
     79c:	f0 e0       	ldi	r31, 0x00	; 0
     79e:	80 81       	ld	r24, Z
     7a0:	88 23       	and	r24, r24
     7a2:	ec f7       	brge	.-6      	; 0x79e <i2c_write+0xe>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     7a4:	90 91 71 00 	lds	r25, 0x0071
     7a8:	98 7f       	andi	r25, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
     7aa:	81 e0       	ldi	r24, 0x01	; 1
     7ac:	98 32       	cpi	r25, 0x28	; 40
     7ae:	09 f4       	brne	.+2      	; 0x7b2 <i2c_write+0x22>
     7b0:	80 e0       	ldi	r24, 0x00	; 0
	return 0;

}/* i2c_write */
     7b2:	08 95       	ret

000007b4 <i2c_readAck>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     7b4:	84 ec       	ldi	r24, 0xC4	; 196
     7b6:	80 93 74 00 	sts	0x0074, r24
	while(!(TWCR & (1<<TWINT)));    
     7ba:	e4 e7       	ldi	r30, 0x74	; 116
     7bc:	f0 e0       	ldi	r31, 0x00	; 0
     7be:	80 81       	ld	r24, Z
     7c0:	88 23       	and	r24, r24
     7c2:	ec f7       	brge	.-6      	; 0x7be <i2c_readAck+0xa>

    return TWDR;
     7c4:	80 91 73 00 	lds	r24, 0x0073

}/* i2c_readAck */
     7c8:	08 95       	ret

000007ca <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     7ca:	84 e8       	ldi	r24, 0x84	; 132
     7cc:	80 93 74 00 	sts	0x0074, r24
	while(!(TWCR & (1<<TWINT)));
     7d0:	e4 e7       	ldi	r30, 0x74	; 116
     7d2:	f0 e0       	ldi	r31, 0x00	; 0
     7d4:	80 81       	ld	r24, Z
     7d6:	88 23       	and	r24, r24
     7d8:	ec f7       	brge	.-6      	; 0x7d4 <i2c_readNak+0xa>
	
    return TWDR;
     7da:	80 91 73 00 	lds	r24, 0x0073

}/* i2c_readNak */
     7de:	08 95       	ret

000007e0 <__subsf3>:
     7e0:	50 58       	subi	r21, 0x80	; 128

000007e2 <__addsf3>:
     7e2:	bb 27       	eor	r27, r27
     7e4:	aa 27       	eor	r26, r26
     7e6:	0e d0       	rcall	.+28     	; 0x804 <__addsf3x>
     7e8:	48 c1       	rjmp	.+656    	; 0xa7a <__fp_round>
     7ea:	39 d1       	rcall	.+626    	; 0xa5e <__fp_pscA>
     7ec:	30 f0       	brcs	.+12     	; 0x7fa <__addsf3+0x18>
     7ee:	3e d1       	rcall	.+636    	; 0xa6c <__fp_pscB>
     7f0:	20 f0       	brcs	.+8      	; 0x7fa <__addsf3+0x18>
     7f2:	31 f4       	brne	.+12     	; 0x800 <__addsf3+0x1e>
     7f4:	9f 3f       	cpi	r25, 0xFF	; 255
     7f6:	11 f4       	brne	.+4      	; 0x7fc <__addsf3+0x1a>
     7f8:	1e f4       	brtc	.+6      	; 0x800 <__addsf3+0x1e>
     7fa:	2e c1       	rjmp	.+604    	; 0xa58 <__fp_nan>
     7fc:	0e f4       	brtc	.+2      	; 0x800 <__addsf3+0x1e>
     7fe:	e0 95       	com	r30
     800:	e7 fb       	bst	r30, 7
     802:	24 c1       	rjmp	.+584    	; 0xa4c <__fp_inf>

00000804 <__addsf3x>:
     804:	e9 2f       	mov	r30, r25
     806:	4a d1       	rcall	.+660    	; 0xa9c <__fp_split3>
     808:	80 f3       	brcs	.-32     	; 0x7ea <__addsf3+0x8>
     80a:	ba 17       	cp	r27, r26
     80c:	62 07       	cpc	r22, r18
     80e:	73 07       	cpc	r23, r19
     810:	84 07       	cpc	r24, r20
     812:	95 07       	cpc	r25, r21
     814:	18 f0       	brcs	.+6      	; 0x81c <__addsf3x+0x18>
     816:	71 f4       	brne	.+28     	; 0x834 <__addsf3x+0x30>
     818:	9e f5       	brtc	.+102    	; 0x880 <__addsf3x+0x7c>
     81a:	62 c1       	rjmp	.+708    	; 0xae0 <__fp_zero>
     81c:	0e f4       	brtc	.+2      	; 0x820 <__addsf3x+0x1c>
     81e:	e0 95       	com	r30
     820:	0b 2e       	mov	r0, r27
     822:	ba 2f       	mov	r27, r26
     824:	a0 2d       	mov	r26, r0
     826:	0b 01       	movw	r0, r22
     828:	b9 01       	movw	r22, r18
     82a:	90 01       	movw	r18, r0
     82c:	0c 01       	movw	r0, r24
     82e:	ca 01       	movw	r24, r20
     830:	a0 01       	movw	r20, r0
     832:	11 24       	eor	r1, r1
     834:	ff 27       	eor	r31, r31
     836:	59 1b       	sub	r21, r25
     838:	99 f0       	breq	.+38     	; 0x860 <__addsf3x+0x5c>
     83a:	59 3f       	cpi	r21, 0xF9	; 249
     83c:	50 f4       	brcc	.+20     	; 0x852 <__addsf3x+0x4e>
     83e:	50 3e       	cpi	r21, 0xE0	; 224
     840:	68 f1       	brcs	.+90     	; 0x89c <__addsf3x+0x98>
     842:	1a 16       	cp	r1, r26
     844:	f0 40       	sbci	r31, 0x00	; 0
     846:	a2 2f       	mov	r26, r18
     848:	23 2f       	mov	r18, r19
     84a:	34 2f       	mov	r19, r20
     84c:	44 27       	eor	r20, r20
     84e:	58 5f       	subi	r21, 0xF8	; 248
     850:	f3 cf       	rjmp	.-26     	; 0x838 <__addsf3x+0x34>
     852:	46 95       	lsr	r20
     854:	37 95       	ror	r19
     856:	27 95       	ror	r18
     858:	a7 95       	ror	r26
     85a:	f0 40       	sbci	r31, 0x00	; 0
     85c:	53 95       	inc	r21
     85e:	c9 f7       	brne	.-14     	; 0x852 <__addsf3x+0x4e>
     860:	7e f4       	brtc	.+30     	; 0x880 <__addsf3x+0x7c>
     862:	1f 16       	cp	r1, r31
     864:	ba 0b       	sbc	r27, r26
     866:	62 0b       	sbc	r22, r18
     868:	73 0b       	sbc	r23, r19
     86a:	84 0b       	sbc	r24, r20
     86c:	ba f0       	brmi	.+46     	; 0x89c <__addsf3x+0x98>
     86e:	91 50       	subi	r25, 0x01	; 1
     870:	a1 f0       	breq	.+40     	; 0x89a <__addsf3x+0x96>
     872:	ff 0f       	add	r31, r31
     874:	bb 1f       	adc	r27, r27
     876:	66 1f       	adc	r22, r22
     878:	77 1f       	adc	r23, r23
     87a:	88 1f       	adc	r24, r24
     87c:	c2 f7       	brpl	.-16     	; 0x86e <__addsf3x+0x6a>
     87e:	0e c0       	rjmp	.+28     	; 0x89c <__addsf3x+0x98>
     880:	ba 0f       	add	r27, r26
     882:	62 1f       	adc	r22, r18
     884:	73 1f       	adc	r23, r19
     886:	84 1f       	adc	r24, r20
     888:	48 f4       	brcc	.+18     	; 0x89c <__addsf3x+0x98>
     88a:	87 95       	ror	r24
     88c:	77 95       	ror	r23
     88e:	67 95       	ror	r22
     890:	b7 95       	ror	r27
     892:	f7 95       	ror	r31
     894:	9e 3f       	cpi	r25, 0xFE	; 254
     896:	08 f0       	brcs	.+2      	; 0x89a <__addsf3x+0x96>
     898:	b3 cf       	rjmp	.-154    	; 0x800 <__addsf3+0x1e>
     89a:	93 95       	inc	r25
     89c:	88 0f       	add	r24, r24
     89e:	08 f0       	brcs	.+2      	; 0x8a2 <__addsf3x+0x9e>
     8a0:	99 27       	eor	r25, r25
     8a2:	ee 0f       	add	r30, r30
     8a4:	97 95       	ror	r25
     8a6:	87 95       	ror	r24
     8a8:	08 95       	ret

000008aa <__divsf3>:
     8aa:	0c d0       	rcall	.+24     	; 0x8c4 <__divsf3x>
     8ac:	e6 c0       	rjmp	.+460    	; 0xa7a <__fp_round>
     8ae:	de d0       	rcall	.+444    	; 0xa6c <__fp_pscB>
     8b0:	40 f0       	brcs	.+16     	; 0x8c2 <__divsf3+0x18>
     8b2:	d5 d0       	rcall	.+426    	; 0xa5e <__fp_pscA>
     8b4:	30 f0       	brcs	.+12     	; 0x8c2 <__divsf3+0x18>
     8b6:	21 f4       	brne	.+8      	; 0x8c0 <__divsf3+0x16>
     8b8:	5f 3f       	cpi	r21, 0xFF	; 255
     8ba:	19 f0       	breq	.+6      	; 0x8c2 <__divsf3+0x18>
     8bc:	c7 c0       	rjmp	.+398    	; 0xa4c <__fp_inf>
     8be:	51 11       	cpse	r21, r1
     8c0:	10 c1       	rjmp	.+544    	; 0xae2 <__fp_szero>
     8c2:	ca c0       	rjmp	.+404    	; 0xa58 <__fp_nan>

000008c4 <__divsf3x>:
     8c4:	eb d0       	rcall	.+470    	; 0xa9c <__fp_split3>
     8c6:	98 f3       	brcs	.-26     	; 0x8ae <__divsf3+0x4>

000008c8 <__divsf3_pse>:
     8c8:	99 23       	and	r25, r25
     8ca:	c9 f3       	breq	.-14     	; 0x8be <__divsf3+0x14>
     8cc:	55 23       	and	r21, r21
     8ce:	b1 f3       	breq	.-20     	; 0x8bc <__divsf3+0x12>
     8d0:	95 1b       	sub	r25, r21
     8d2:	55 0b       	sbc	r21, r21
     8d4:	bb 27       	eor	r27, r27
     8d6:	aa 27       	eor	r26, r26
     8d8:	62 17       	cp	r22, r18
     8da:	73 07       	cpc	r23, r19
     8dc:	84 07       	cpc	r24, r20
     8de:	38 f0       	brcs	.+14     	; 0x8ee <__divsf3_pse+0x26>
     8e0:	9f 5f       	subi	r25, 0xFF	; 255
     8e2:	5f 4f       	sbci	r21, 0xFF	; 255
     8e4:	22 0f       	add	r18, r18
     8e6:	33 1f       	adc	r19, r19
     8e8:	44 1f       	adc	r20, r20
     8ea:	aa 1f       	adc	r26, r26
     8ec:	a9 f3       	breq	.-22     	; 0x8d8 <__divsf3_pse+0x10>
     8ee:	33 d0       	rcall	.+102    	; 0x956 <__divsf3_pse+0x8e>
     8f0:	0e 2e       	mov	r0, r30
     8f2:	3a f0       	brmi	.+14     	; 0x902 <__divsf3_pse+0x3a>
     8f4:	e0 e8       	ldi	r30, 0x80	; 128
     8f6:	30 d0       	rcall	.+96     	; 0x958 <__divsf3_pse+0x90>
     8f8:	91 50       	subi	r25, 0x01	; 1
     8fa:	50 40       	sbci	r21, 0x00	; 0
     8fc:	e6 95       	lsr	r30
     8fe:	00 1c       	adc	r0, r0
     900:	ca f7       	brpl	.-14     	; 0x8f4 <__divsf3_pse+0x2c>
     902:	29 d0       	rcall	.+82     	; 0x956 <__divsf3_pse+0x8e>
     904:	fe 2f       	mov	r31, r30
     906:	27 d0       	rcall	.+78     	; 0x956 <__divsf3_pse+0x8e>
     908:	66 0f       	add	r22, r22
     90a:	77 1f       	adc	r23, r23
     90c:	88 1f       	adc	r24, r24
     90e:	bb 1f       	adc	r27, r27
     910:	26 17       	cp	r18, r22
     912:	37 07       	cpc	r19, r23
     914:	48 07       	cpc	r20, r24
     916:	ab 07       	cpc	r26, r27
     918:	b0 e8       	ldi	r27, 0x80	; 128
     91a:	09 f0       	breq	.+2      	; 0x91e <__divsf3_pse+0x56>
     91c:	bb 0b       	sbc	r27, r27
     91e:	80 2d       	mov	r24, r0
     920:	bf 01       	movw	r22, r30
     922:	ff 27       	eor	r31, r31
     924:	93 58       	subi	r25, 0x83	; 131
     926:	5f 4f       	sbci	r21, 0xFF	; 255
     928:	2a f0       	brmi	.+10     	; 0x934 <__divsf3_pse+0x6c>
     92a:	9e 3f       	cpi	r25, 0xFE	; 254
     92c:	51 05       	cpc	r21, r1
     92e:	68 f0       	brcs	.+26     	; 0x94a <__divsf3_pse+0x82>
     930:	8d c0       	rjmp	.+282    	; 0xa4c <__fp_inf>
     932:	d7 c0       	rjmp	.+430    	; 0xae2 <__fp_szero>
     934:	5f 3f       	cpi	r21, 0xFF	; 255
     936:	ec f3       	brlt	.-6      	; 0x932 <__divsf3_pse+0x6a>
     938:	98 3e       	cpi	r25, 0xE8	; 232
     93a:	dc f3       	brlt	.-10     	; 0x932 <__divsf3_pse+0x6a>
     93c:	86 95       	lsr	r24
     93e:	77 95       	ror	r23
     940:	67 95       	ror	r22
     942:	b7 95       	ror	r27
     944:	f7 95       	ror	r31
     946:	9f 5f       	subi	r25, 0xFF	; 255
     948:	c9 f7       	brne	.-14     	; 0x93c <__divsf3_pse+0x74>
     94a:	88 0f       	add	r24, r24
     94c:	91 1d       	adc	r25, r1
     94e:	96 95       	lsr	r25
     950:	87 95       	ror	r24
     952:	97 f9       	bld	r25, 7
     954:	08 95       	ret
     956:	e1 e0       	ldi	r30, 0x01	; 1
     958:	66 0f       	add	r22, r22
     95a:	77 1f       	adc	r23, r23
     95c:	88 1f       	adc	r24, r24
     95e:	bb 1f       	adc	r27, r27
     960:	62 17       	cp	r22, r18
     962:	73 07       	cpc	r23, r19
     964:	84 07       	cpc	r24, r20
     966:	ba 07       	cpc	r27, r26
     968:	20 f0       	brcs	.+8      	; 0x972 <__divsf3_pse+0xaa>
     96a:	62 1b       	sub	r22, r18
     96c:	73 0b       	sbc	r23, r19
     96e:	84 0b       	sbc	r24, r20
     970:	ba 0b       	sbc	r27, r26
     972:	ee 1f       	adc	r30, r30
     974:	88 f7       	brcc	.-30     	; 0x958 <__divsf3_pse+0x90>
     976:	e0 95       	com	r30
     978:	08 95       	ret

0000097a <__fixunssfsi>:
     97a:	98 d0       	rcall	.+304    	; 0xaac <__fp_splitA>
     97c:	88 f0       	brcs	.+34     	; 0x9a0 <__fixunssfsi+0x26>
     97e:	9f 57       	subi	r25, 0x7F	; 127
     980:	90 f0       	brcs	.+36     	; 0x9a6 <__fixunssfsi+0x2c>
     982:	b9 2f       	mov	r27, r25
     984:	99 27       	eor	r25, r25
     986:	b7 51       	subi	r27, 0x17	; 23
     988:	a0 f0       	brcs	.+40     	; 0x9b2 <__fixunssfsi+0x38>
     98a:	d1 f0       	breq	.+52     	; 0x9c0 <__fixunssfsi+0x46>
     98c:	66 0f       	add	r22, r22
     98e:	77 1f       	adc	r23, r23
     990:	88 1f       	adc	r24, r24
     992:	99 1f       	adc	r25, r25
     994:	1a f0       	brmi	.+6      	; 0x99c <__fixunssfsi+0x22>
     996:	ba 95       	dec	r27
     998:	c9 f7       	brne	.-14     	; 0x98c <__fixunssfsi+0x12>
     99a:	12 c0       	rjmp	.+36     	; 0x9c0 <__fixunssfsi+0x46>
     99c:	b1 30       	cpi	r27, 0x01	; 1
     99e:	81 f0       	breq	.+32     	; 0x9c0 <__fixunssfsi+0x46>
     9a0:	9f d0       	rcall	.+318    	; 0xae0 <__fp_zero>
     9a2:	b1 e0       	ldi	r27, 0x01	; 1
     9a4:	08 95       	ret
     9a6:	9c c0       	rjmp	.+312    	; 0xae0 <__fp_zero>
     9a8:	67 2f       	mov	r22, r23
     9aa:	78 2f       	mov	r23, r24
     9ac:	88 27       	eor	r24, r24
     9ae:	b8 5f       	subi	r27, 0xF8	; 248
     9b0:	39 f0       	breq	.+14     	; 0x9c0 <__fixunssfsi+0x46>
     9b2:	b9 3f       	cpi	r27, 0xF9	; 249
     9b4:	cc f3       	brlt	.-14     	; 0x9a8 <__fixunssfsi+0x2e>
     9b6:	86 95       	lsr	r24
     9b8:	77 95       	ror	r23
     9ba:	67 95       	ror	r22
     9bc:	b3 95       	inc	r27
     9be:	d9 f7       	brne	.-10     	; 0x9b6 <__fixunssfsi+0x3c>
     9c0:	3e f4       	brtc	.+14     	; 0x9d0 <__fixunssfsi+0x56>
     9c2:	90 95       	com	r25
     9c4:	80 95       	com	r24
     9c6:	70 95       	com	r23
     9c8:	61 95       	neg	r22
     9ca:	7f 4f       	sbci	r23, 0xFF	; 255
     9cc:	8f 4f       	sbci	r24, 0xFF	; 255
     9ce:	9f 4f       	sbci	r25, 0xFF	; 255
     9d0:	08 95       	ret

000009d2 <__floatunsisf>:
     9d2:	e8 94       	clt
     9d4:	09 c0       	rjmp	.+18     	; 0x9e8 <__floatsisf+0x12>

000009d6 <__floatsisf>:
     9d6:	97 fb       	bst	r25, 7
     9d8:	3e f4       	brtc	.+14     	; 0x9e8 <__floatsisf+0x12>
     9da:	90 95       	com	r25
     9dc:	80 95       	com	r24
     9de:	70 95       	com	r23
     9e0:	61 95       	neg	r22
     9e2:	7f 4f       	sbci	r23, 0xFF	; 255
     9e4:	8f 4f       	sbci	r24, 0xFF	; 255
     9e6:	9f 4f       	sbci	r25, 0xFF	; 255
     9e8:	99 23       	and	r25, r25
     9ea:	a9 f0       	breq	.+42     	; 0xa16 <__floatsisf+0x40>
     9ec:	f9 2f       	mov	r31, r25
     9ee:	96 e9       	ldi	r25, 0x96	; 150
     9f0:	bb 27       	eor	r27, r27
     9f2:	93 95       	inc	r25
     9f4:	f6 95       	lsr	r31
     9f6:	87 95       	ror	r24
     9f8:	77 95       	ror	r23
     9fa:	67 95       	ror	r22
     9fc:	b7 95       	ror	r27
     9fe:	f1 11       	cpse	r31, r1
     a00:	f8 cf       	rjmp	.-16     	; 0x9f2 <__floatsisf+0x1c>
     a02:	fa f4       	brpl	.+62     	; 0xa42 <__floatsisf+0x6c>
     a04:	bb 0f       	add	r27, r27
     a06:	11 f4       	brne	.+4      	; 0xa0c <__floatsisf+0x36>
     a08:	60 ff       	sbrs	r22, 0
     a0a:	1b c0       	rjmp	.+54     	; 0xa42 <__floatsisf+0x6c>
     a0c:	6f 5f       	subi	r22, 0xFF	; 255
     a0e:	7f 4f       	sbci	r23, 0xFF	; 255
     a10:	8f 4f       	sbci	r24, 0xFF	; 255
     a12:	9f 4f       	sbci	r25, 0xFF	; 255
     a14:	16 c0       	rjmp	.+44     	; 0xa42 <__floatsisf+0x6c>
     a16:	88 23       	and	r24, r24
     a18:	11 f0       	breq	.+4      	; 0xa1e <__floatsisf+0x48>
     a1a:	96 e9       	ldi	r25, 0x96	; 150
     a1c:	11 c0       	rjmp	.+34     	; 0xa40 <__floatsisf+0x6a>
     a1e:	77 23       	and	r23, r23
     a20:	21 f0       	breq	.+8      	; 0xa2a <__floatsisf+0x54>
     a22:	9e e8       	ldi	r25, 0x8E	; 142
     a24:	87 2f       	mov	r24, r23
     a26:	76 2f       	mov	r23, r22
     a28:	05 c0       	rjmp	.+10     	; 0xa34 <__floatsisf+0x5e>
     a2a:	66 23       	and	r22, r22
     a2c:	71 f0       	breq	.+28     	; 0xa4a <__floatsisf+0x74>
     a2e:	96 e8       	ldi	r25, 0x86	; 134
     a30:	86 2f       	mov	r24, r22
     a32:	70 e0       	ldi	r23, 0x00	; 0
     a34:	60 e0       	ldi	r22, 0x00	; 0
     a36:	2a f0       	brmi	.+10     	; 0xa42 <__floatsisf+0x6c>
     a38:	9a 95       	dec	r25
     a3a:	66 0f       	add	r22, r22
     a3c:	77 1f       	adc	r23, r23
     a3e:	88 1f       	adc	r24, r24
     a40:	da f7       	brpl	.-10     	; 0xa38 <__floatsisf+0x62>
     a42:	88 0f       	add	r24, r24
     a44:	96 95       	lsr	r25
     a46:	87 95       	ror	r24
     a48:	97 f9       	bld	r25, 7
     a4a:	08 95       	ret

00000a4c <__fp_inf>:
     a4c:	97 f9       	bld	r25, 7
     a4e:	9f 67       	ori	r25, 0x7F	; 127
     a50:	80 e8       	ldi	r24, 0x80	; 128
     a52:	70 e0       	ldi	r23, 0x00	; 0
     a54:	60 e0       	ldi	r22, 0x00	; 0
     a56:	08 95       	ret

00000a58 <__fp_nan>:
     a58:	9f ef       	ldi	r25, 0xFF	; 255
     a5a:	80 ec       	ldi	r24, 0xC0	; 192
     a5c:	08 95       	ret

00000a5e <__fp_pscA>:
     a5e:	00 24       	eor	r0, r0
     a60:	0a 94       	dec	r0
     a62:	16 16       	cp	r1, r22
     a64:	17 06       	cpc	r1, r23
     a66:	18 06       	cpc	r1, r24
     a68:	09 06       	cpc	r0, r25
     a6a:	08 95       	ret

00000a6c <__fp_pscB>:
     a6c:	00 24       	eor	r0, r0
     a6e:	0a 94       	dec	r0
     a70:	12 16       	cp	r1, r18
     a72:	13 06       	cpc	r1, r19
     a74:	14 06       	cpc	r1, r20
     a76:	05 06       	cpc	r0, r21
     a78:	08 95       	ret

00000a7a <__fp_round>:
     a7a:	09 2e       	mov	r0, r25
     a7c:	03 94       	inc	r0
     a7e:	00 0c       	add	r0, r0
     a80:	11 f4       	brne	.+4      	; 0xa86 <__fp_round+0xc>
     a82:	88 23       	and	r24, r24
     a84:	52 f0       	brmi	.+20     	; 0xa9a <__fp_round+0x20>
     a86:	bb 0f       	add	r27, r27
     a88:	40 f4       	brcc	.+16     	; 0xa9a <__fp_round+0x20>
     a8a:	bf 2b       	or	r27, r31
     a8c:	11 f4       	brne	.+4      	; 0xa92 <__fp_round+0x18>
     a8e:	60 ff       	sbrs	r22, 0
     a90:	04 c0       	rjmp	.+8      	; 0xa9a <__fp_round+0x20>
     a92:	6f 5f       	subi	r22, 0xFF	; 255
     a94:	7f 4f       	sbci	r23, 0xFF	; 255
     a96:	8f 4f       	sbci	r24, 0xFF	; 255
     a98:	9f 4f       	sbci	r25, 0xFF	; 255
     a9a:	08 95       	ret

00000a9c <__fp_split3>:
     a9c:	57 fd       	sbrc	r21, 7
     a9e:	90 58       	subi	r25, 0x80	; 128
     aa0:	44 0f       	add	r20, r20
     aa2:	55 1f       	adc	r21, r21
     aa4:	59 f0       	breq	.+22     	; 0xabc <__fp_splitA+0x10>
     aa6:	5f 3f       	cpi	r21, 0xFF	; 255
     aa8:	71 f0       	breq	.+28     	; 0xac6 <__fp_splitA+0x1a>
     aaa:	47 95       	ror	r20

00000aac <__fp_splitA>:
     aac:	88 0f       	add	r24, r24
     aae:	97 fb       	bst	r25, 7
     ab0:	99 1f       	adc	r25, r25
     ab2:	61 f0       	breq	.+24     	; 0xacc <__fp_splitA+0x20>
     ab4:	9f 3f       	cpi	r25, 0xFF	; 255
     ab6:	79 f0       	breq	.+30     	; 0xad6 <__fp_splitA+0x2a>
     ab8:	87 95       	ror	r24
     aba:	08 95       	ret
     abc:	12 16       	cp	r1, r18
     abe:	13 06       	cpc	r1, r19
     ac0:	14 06       	cpc	r1, r20
     ac2:	55 1f       	adc	r21, r21
     ac4:	f2 cf       	rjmp	.-28     	; 0xaaa <__fp_split3+0xe>
     ac6:	46 95       	lsr	r20
     ac8:	f1 df       	rcall	.-30     	; 0xaac <__fp_splitA>
     aca:	08 c0       	rjmp	.+16     	; 0xadc <__fp_splitA+0x30>
     acc:	16 16       	cp	r1, r22
     ace:	17 06       	cpc	r1, r23
     ad0:	18 06       	cpc	r1, r24
     ad2:	99 1f       	adc	r25, r25
     ad4:	f1 cf       	rjmp	.-30     	; 0xab8 <__fp_splitA+0xc>
     ad6:	86 95       	lsr	r24
     ad8:	71 05       	cpc	r23, r1
     ada:	61 05       	cpc	r22, r1
     adc:	08 94       	sec
     ade:	08 95       	ret

00000ae0 <__fp_zero>:
     ae0:	e8 94       	clt

00000ae2 <__fp_szero>:
     ae2:	bb 27       	eor	r27, r27
     ae4:	66 27       	eor	r22, r22
     ae6:	77 27       	eor	r23, r23
     ae8:	cb 01       	movw	r24, r22
     aea:	97 f9       	bld	r25, 7
     aec:	08 95       	ret

00000aee <__gesf2>:
     aee:	66 d0       	rcall	.+204    	; 0xbbc <__fp_cmp>
     af0:	08 f4       	brcc	.+2      	; 0xaf4 <__gesf2+0x6>
     af2:	8f ef       	ldi	r24, 0xFF	; 255
     af4:	08 95       	ret

00000af6 <__mulsf3>:
     af6:	0b d0       	rcall	.+22     	; 0xb0e <__mulsf3x>
     af8:	c0 cf       	rjmp	.-128    	; 0xa7a <__fp_round>
     afa:	b1 df       	rcall	.-158    	; 0xa5e <__fp_pscA>
     afc:	28 f0       	brcs	.+10     	; 0xb08 <__mulsf3+0x12>
     afe:	b6 df       	rcall	.-148    	; 0xa6c <__fp_pscB>
     b00:	18 f0       	brcs	.+6      	; 0xb08 <__mulsf3+0x12>
     b02:	95 23       	and	r25, r21
     b04:	09 f0       	breq	.+2      	; 0xb08 <__mulsf3+0x12>
     b06:	a2 cf       	rjmp	.-188    	; 0xa4c <__fp_inf>
     b08:	a7 cf       	rjmp	.-178    	; 0xa58 <__fp_nan>
     b0a:	11 24       	eor	r1, r1
     b0c:	ea cf       	rjmp	.-44     	; 0xae2 <__fp_szero>

00000b0e <__mulsf3x>:
     b0e:	c6 df       	rcall	.-116    	; 0xa9c <__fp_split3>
     b10:	a0 f3       	brcs	.-24     	; 0xafa <__mulsf3+0x4>

00000b12 <__mulsf3_pse>:
     b12:	95 9f       	mul	r25, r21
     b14:	d1 f3       	breq	.-12     	; 0xb0a <__mulsf3+0x14>
     b16:	95 0f       	add	r25, r21
     b18:	50 e0       	ldi	r21, 0x00	; 0
     b1a:	55 1f       	adc	r21, r21
     b1c:	62 9f       	mul	r22, r18
     b1e:	f0 01       	movw	r30, r0
     b20:	72 9f       	mul	r23, r18
     b22:	bb 27       	eor	r27, r27
     b24:	f0 0d       	add	r31, r0
     b26:	b1 1d       	adc	r27, r1
     b28:	63 9f       	mul	r22, r19
     b2a:	aa 27       	eor	r26, r26
     b2c:	f0 0d       	add	r31, r0
     b2e:	b1 1d       	adc	r27, r1
     b30:	aa 1f       	adc	r26, r26
     b32:	64 9f       	mul	r22, r20
     b34:	66 27       	eor	r22, r22
     b36:	b0 0d       	add	r27, r0
     b38:	a1 1d       	adc	r26, r1
     b3a:	66 1f       	adc	r22, r22
     b3c:	82 9f       	mul	r24, r18
     b3e:	22 27       	eor	r18, r18
     b40:	b0 0d       	add	r27, r0
     b42:	a1 1d       	adc	r26, r1
     b44:	62 1f       	adc	r22, r18
     b46:	73 9f       	mul	r23, r19
     b48:	b0 0d       	add	r27, r0
     b4a:	a1 1d       	adc	r26, r1
     b4c:	62 1f       	adc	r22, r18
     b4e:	83 9f       	mul	r24, r19
     b50:	a0 0d       	add	r26, r0
     b52:	61 1d       	adc	r22, r1
     b54:	22 1f       	adc	r18, r18
     b56:	74 9f       	mul	r23, r20
     b58:	33 27       	eor	r19, r19
     b5a:	a0 0d       	add	r26, r0
     b5c:	61 1d       	adc	r22, r1
     b5e:	23 1f       	adc	r18, r19
     b60:	84 9f       	mul	r24, r20
     b62:	60 0d       	add	r22, r0
     b64:	21 1d       	adc	r18, r1
     b66:	82 2f       	mov	r24, r18
     b68:	76 2f       	mov	r23, r22
     b6a:	6a 2f       	mov	r22, r26
     b6c:	11 24       	eor	r1, r1
     b6e:	9f 57       	subi	r25, 0x7F	; 127
     b70:	50 40       	sbci	r21, 0x00	; 0
     b72:	8a f0       	brmi	.+34     	; 0xb96 <__mulsf3_pse+0x84>
     b74:	e1 f0       	breq	.+56     	; 0xbae <__mulsf3_pse+0x9c>
     b76:	88 23       	and	r24, r24
     b78:	4a f0       	brmi	.+18     	; 0xb8c <__mulsf3_pse+0x7a>
     b7a:	ee 0f       	add	r30, r30
     b7c:	ff 1f       	adc	r31, r31
     b7e:	bb 1f       	adc	r27, r27
     b80:	66 1f       	adc	r22, r22
     b82:	77 1f       	adc	r23, r23
     b84:	88 1f       	adc	r24, r24
     b86:	91 50       	subi	r25, 0x01	; 1
     b88:	50 40       	sbci	r21, 0x00	; 0
     b8a:	a9 f7       	brne	.-22     	; 0xb76 <__mulsf3_pse+0x64>
     b8c:	9e 3f       	cpi	r25, 0xFE	; 254
     b8e:	51 05       	cpc	r21, r1
     b90:	70 f0       	brcs	.+28     	; 0xbae <__mulsf3_pse+0x9c>
     b92:	5c cf       	rjmp	.-328    	; 0xa4c <__fp_inf>
     b94:	a6 cf       	rjmp	.-180    	; 0xae2 <__fp_szero>
     b96:	5f 3f       	cpi	r21, 0xFF	; 255
     b98:	ec f3       	brlt	.-6      	; 0xb94 <__mulsf3_pse+0x82>
     b9a:	98 3e       	cpi	r25, 0xE8	; 232
     b9c:	dc f3       	brlt	.-10     	; 0xb94 <__mulsf3_pse+0x82>
     b9e:	86 95       	lsr	r24
     ba0:	77 95       	ror	r23
     ba2:	67 95       	ror	r22
     ba4:	b7 95       	ror	r27
     ba6:	f7 95       	ror	r31
     ba8:	e7 95       	ror	r30
     baa:	9f 5f       	subi	r25, 0xFF	; 255
     bac:	c1 f7       	brne	.-16     	; 0xb9e <__mulsf3_pse+0x8c>
     bae:	fe 2b       	or	r31, r30
     bb0:	88 0f       	add	r24, r24
     bb2:	91 1d       	adc	r25, r1
     bb4:	96 95       	lsr	r25
     bb6:	87 95       	ror	r24
     bb8:	97 f9       	bld	r25, 7
     bba:	08 95       	ret

00000bbc <__fp_cmp>:
     bbc:	99 0f       	add	r25, r25
     bbe:	00 08       	sbc	r0, r0
     bc0:	55 0f       	add	r21, r21
     bc2:	aa 0b       	sbc	r26, r26
     bc4:	e0 e8       	ldi	r30, 0x80	; 128
     bc6:	fe ef       	ldi	r31, 0xFE	; 254
     bc8:	16 16       	cp	r1, r22
     bca:	17 06       	cpc	r1, r23
     bcc:	e8 07       	cpc	r30, r24
     bce:	f9 07       	cpc	r31, r25
     bd0:	c0 f0       	brcs	.+48     	; 0xc02 <__fp_cmp+0x46>
     bd2:	12 16       	cp	r1, r18
     bd4:	13 06       	cpc	r1, r19
     bd6:	e4 07       	cpc	r30, r20
     bd8:	f5 07       	cpc	r31, r21
     bda:	98 f0       	brcs	.+38     	; 0xc02 <__fp_cmp+0x46>
     bdc:	62 1b       	sub	r22, r18
     bde:	73 0b       	sbc	r23, r19
     be0:	84 0b       	sbc	r24, r20
     be2:	95 0b       	sbc	r25, r21
     be4:	39 f4       	brne	.+14     	; 0xbf4 <__fp_cmp+0x38>
     be6:	0a 26       	eor	r0, r26
     be8:	61 f0       	breq	.+24     	; 0xc02 <__fp_cmp+0x46>
     bea:	23 2b       	or	r18, r19
     bec:	24 2b       	or	r18, r20
     bee:	25 2b       	or	r18, r21
     bf0:	21 f4       	brne	.+8      	; 0xbfa <__fp_cmp+0x3e>
     bf2:	08 95       	ret
     bf4:	0a 26       	eor	r0, r26
     bf6:	09 f4       	brne	.+2      	; 0xbfa <__fp_cmp+0x3e>
     bf8:	a1 40       	sbci	r26, 0x01	; 1
     bfa:	a6 95       	lsr	r26
     bfc:	8f ef       	ldi	r24, 0xFF	; 255
     bfe:	81 1d       	adc	r24, r1
     c00:	81 1d       	adc	r24, r1
     c02:	08 95       	ret

00000c04 <vfprintf>:
     c04:	2f 92       	push	r2
     c06:	3f 92       	push	r3
     c08:	4f 92       	push	r4
     c0a:	5f 92       	push	r5
     c0c:	6f 92       	push	r6
     c0e:	7f 92       	push	r7
     c10:	8f 92       	push	r8
     c12:	9f 92       	push	r9
     c14:	af 92       	push	r10
     c16:	bf 92       	push	r11
     c18:	cf 92       	push	r12
     c1a:	df 92       	push	r13
     c1c:	ef 92       	push	r14
     c1e:	ff 92       	push	r15
     c20:	0f 93       	push	r16
     c22:	1f 93       	push	r17
     c24:	cf 93       	push	r28
     c26:	df 93       	push	r29
     c28:	cd b7       	in	r28, 0x3d	; 61
     c2a:	de b7       	in	r29, 0x3e	; 62
     c2c:	63 97       	sbiw	r28, 0x13	; 19
     c2e:	0f b6       	in	r0, 0x3f	; 63
     c30:	f8 94       	cli
     c32:	de bf       	out	0x3e, r29	; 62
     c34:	0f be       	out	0x3f, r0	; 63
     c36:	cd bf       	out	0x3d, r28	; 61
     c38:	6c 01       	movw	r12, r24
     c3a:	4b 01       	movw	r8, r22
     c3c:	2a 01       	movw	r4, r20
     c3e:	fc 01       	movw	r30, r24
     c40:	17 82       	std	Z+7, r1	; 0x07
     c42:	16 82       	std	Z+6, r1	; 0x06
     c44:	83 81       	ldd	r24, Z+3	; 0x03
     c46:	81 ff       	sbrs	r24, 1
     c48:	29 c3       	rjmp	.+1618   	; 0x129c <__stack+0x19d>
     c4a:	ae 01       	movw	r20, r28
     c4c:	4f 5f       	subi	r20, 0xFF	; 255
     c4e:	5f 4f       	sbci	r21, 0xFF	; 255
     c50:	3a 01       	movw	r6, r20
     c52:	f6 01       	movw	r30, r12
     c54:	93 81       	ldd	r25, Z+3	; 0x03
     c56:	f4 01       	movw	r30, r8
     c58:	93 fd       	sbrc	r25, 3
     c5a:	85 91       	lpm	r24, Z+
     c5c:	93 ff       	sbrs	r25, 3
     c5e:	81 91       	ld	r24, Z+
     c60:	4f 01       	movw	r8, r30
     c62:	88 23       	and	r24, r24
     c64:	09 f4       	brne	.+2      	; 0xc68 <vfprintf+0x64>
     c66:	16 c3       	rjmp	.+1580   	; 0x1294 <__stack+0x195>
     c68:	85 32       	cpi	r24, 0x25	; 37
     c6a:	39 f4       	brne	.+14     	; 0xc7a <vfprintf+0x76>
     c6c:	93 fd       	sbrc	r25, 3
     c6e:	85 91       	lpm	r24, Z+
     c70:	93 ff       	sbrs	r25, 3
     c72:	81 91       	ld	r24, Z+
     c74:	4f 01       	movw	r8, r30
     c76:	85 32       	cpi	r24, 0x25	; 37
     c78:	31 f4       	brne	.+12     	; 0xc86 <vfprintf+0x82>
     c7a:	b6 01       	movw	r22, r12
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	38 d4       	rcall	.+2160   	; 0x14f0 <fputc>
     c80:	52 01       	movw	r10, r4
     c82:	25 01       	movw	r4, r10
     c84:	e6 cf       	rjmp	.-52     	; 0xc52 <vfprintf+0x4e>
     c86:	10 e0       	ldi	r17, 0x00	; 0
     c88:	f1 2c       	mov	r15, r1
     c8a:	20 e0       	ldi	r18, 0x00	; 0
     c8c:	20 32       	cpi	r18, 0x20	; 32
     c8e:	a0 f4       	brcc	.+40     	; 0xcb8 <vfprintf+0xb4>
     c90:	8b 32       	cpi	r24, 0x2B	; 43
     c92:	69 f0       	breq	.+26     	; 0xcae <vfprintf+0xaa>
     c94:	30 f4       	brcc	.+12     	; 0xca2 <vfprintf+0x9e>
     c96:	80 32       	cpi	r24, 0x20	; 32
     c98:	59 f0       	breq	.+22     	; 0xcb0 <vfprintf+0xac>
     c9a:	83 32       	cpi	r24, 0x23	; 35
     c9c:	69 f4       	brne	.+26     	; 0xcb8 <vfprintf+0xb4>
     c9e:	20 61       	ori	r18, 0x10	; 16
     ca0:	2c c0       	rjmp	.+88     	; 0xcfa <vfprintf+0xf6>
     ca2:	8d 32       	cpi	r24, 0x2D	; 45
     ca4:	39 f0       	breq	.+14     	; 0xcb4 <vfprintf+0xb0>
     ca6:	80 33       	cpi	r24, 0x30	; 48
     ca8:	39 f4       	brne	.+14     	; 0xcb8 <vfprintf+0xb4>
     caa:	21 60       	ori	r18, 0x01	; 1
     cac:	26 c0       	rjmp	.+76     	; 0xcfa <vfprintf+0xf6>
     cae:	22 60       	ori	r18, 0x02	; 2
     cb0:	24 60       	ori	r18, 0x04	; 4
     cb2:	23 c0       	rjmp	.+70     	; 0xcfa <vfprintf+0xf6>
     cb4:	28 60       	ori	r18, 0x08	; 8
     cb6:	21 c0       	rjmp	.+66     	; 0xcfa <vfprintf+0xf6>
     cb8:	27 fd       	sbrc	r18, 7
     cba:	27 c0       	rjmp	.+78     	; 0xd0a <vfprintf+0x106>
     cbc:	30 ed       	ldi	r19, 0xD0	; 208
     cbe:	38 0f       	add	r19, r24
     cc0:	3a 30       	cpi	r19, 0x0A	; 10
     cc2:	78 f4       	brcc	.+30     	; 0xce2 <vfprintf+0xde>
     cc4:	26 ff       	sbrs	r18, 6
     cc6:	06 c0       	rjmp	.+12     	; 0xcd4 <vfprintf+0xd0>
     cc8:	fa e0       	ldi	r31, 0x0A	; 10
     cca:	1f 9f       	mul	r17, r31
     ccc:	30 0d       	add	r19, r0
     cce:	11 24       	eor	r1, r1
     cd0:	13 2f       	mov	r17, r19
     cd2:	13 c0       	rjmp	.+38     	; 0xcfa <vfprintf+0xf6>
     cd4:	4a e0       	ldi	r20, 0x0A	; 10
     cd6:	f4 9e       	mul	r15, r20
     cd8:	30 0d       	add	r19, r0
     cda:	11 24       	eor	r1, r1
     cdc:	f3 2e       	mov	r15, r19
     cde:	20 62       	ori	r18, 0x20	; 32
     ce0:	0c c0       	rjmp	.+24     	; 0xcfa <vfprintf+0xf6>
     ce2:	8e 32       	cpi	r24, 0x2E	; 46
     ce4:	21 f4       	brne	.+8      	; 0xcee <vfprintf+0xea>
     ce6:	26 fd       	sbrc	r18, 6
     ce8:	d5 c2       	rjmp	.+1450   	; 0x1294 <__stack+0x195>
     cea:	20 64       	ori	r18, 0x40	; 64
     cec:	06 c0       	rjmp	.+12     	; 0xcfa <vfprintf+0xf6>
     cee:	8c 36       	cpi	r24, 0x6C	; 108
     cf0:	11 f4       	brne	.+4      	; 0xcf6 <vfprintf+0xf2>
     cf2:	20 68       	ori	r18, 0x80	; 128
     cf4:	02 c0       	rjmp	.+4      	; 0xcfa <vfprintf+0xf6>
     cf6:	88 36       	cpi	r24, 0x68	; 104
     cf8:	41 f4       	brne	.+16     	; 0xd0a <vfprintf+0x106>
     cfa:	f4 01       	movw	r30, r8
     cfc:	93 fd       	sbrc	r25, 3
     cfe:	85 91       	lpm	r24, Z+
     d00:	93 ff       	sbrs	r25, 3
     d02:	81 91       	ld	r24, Z+
     d04:	4f 01       	movw	r8, r30
     d06:	81 11       	cpse	r24, r1
     d08:	c1 cf       	rjmp	.-126    	; 0xc8c <vfprintf+0x88>
     d0a:	9b eb       	ldi	r25, 0xBB	; 187
     d0c:	98 0f       	add	r25, r24
     d0e:	93 30       	cpi	r25, 0x03	; 3
     d10:	18 f4       	brcc	.+6      	; 0xd18 <vfprintf+0x114>
     d12:	20 61       	ori	r18, 0x10	; 16
     d14:	80 5e       	subi	r24, 0xE0	; 224
     d16:	06 c0       	rjmp	.+12     	; 0xd24 <vfprintf+0x120>
     d18:	9b e9       	ldi	r25, 0x9B	; 155
     d1a:	98 0f       	add	r25, r24
     d1c:	93 30       	cpi	r25, 0x03	; 3
     d1e:	08 f0       	brcs	.+2      	; 0xd22 <vfprintf+0x11e>
     d20:	64 c1       	rjmp	.+712    	; 0xfea <vfprintf+0x3e6>
     d22:	2f 7e       	andi	r18, 0xEF	; 239
     d24:	26 ff       	sbrs	r18, 6
     d26:	16 e0       	ldi	r17, 0x06	; 6
     d28:	2f 73       	andi	r18, 0x3F	; 63
     d2a:	32 2e       	mov	r3, r18
     d2c:	85 36       	cpi	r24, 0x65	; 101
     d2e:	19 f4       	brne	.+6      	; 0xd36 <vfprintf+0x132>
     d30:	20 64       	ori	r18, 0x40	; 64
     d32:	32 2e       	mov	r3, r18
     d34:	08 c0       	rjmp	.+16     	; 0xd46 <vfprintf+0x142>
     d36:	86 36       	cpi	r24, 0x66	; 102
     d38:	21 f4       	brne	.+8      	; 0xd42 <vfprintf+0x13e>
     d3a:	f2 2f       	mov	r31, r18
     d3c:	f0 68       	ori	r31, 0x80	; 128
     d3e:	3f 2e       	mov	r3, r31
     d40:	02 c0       	rjmp	.+4      	; 0xd46 <vfprintf+0x142>
     d42:	11 11       	cpse	r17, r1
     d44:	11 50       	subi	r17, 0x01	; 1
     d46:	37 fe       	sbrs	r3, 7
     d48:	07 c0       	rjmp	.+14     	; 0xd58 <vfprintf+0x154>
     d4a:	1c 33       	cpi	r17, 0x3C	; 60
     d4c:	50 f4       	brcc	.+20     	; 0xd62 <vfprintf+0x15e>
     d4e:	ee 24       	eor	r14, r14
     d50:	e3 94       	inc	r14
     d52:	e1 0e       	add	r14, r17
     d54:	27 e0       	ldi	r18, 0x07	; 7
     d56:	0b c0       	rjmp	.+22     	; 0xd6e <vfprintf+0x16a>
     d58:	18 30       	cpi	r17, 0x08	; 8
     d5a:	38 f0       	brcs	.+14     	; 0xd6a <vfprintf+0x166>
     d5c:	27 e0       	ldi	r18, 0x07	; 7
     d5e:	17 e0       	ldi	r17, 0x07	; 7
     d60:	05 c0       	rjmp	.+10     	; 0xd6c <vfprintf+0x168>
     d62:	27 e0       	ldi	r18, 0x07	; 7
     d64:	4c e3       	ldi	r20, 0x3C	; 60
     d66:	e4 2e       	mov	r14, r20
     d68:	02 c0       	rjmp	.+4      	; 0xd6e <vfprintf+0x16a>
     d6a:	21 2f       	mov	r18, r17
     d6c:	e1 2c       	mov	r14, r1
     d6e:	52 01       	movw	r10, r4
     d70:	44 e0       	ldi	r20, 0x04	; 4
     d72:	a4 0e       	add	r10, r20
     d74:	b1 1c       	adc	r11, r1
     d76:	f2 01       	movw	r30, r4
     d78:	60 81       	ld	r22, Z
     d7a:	71 81       	ldd	r23, Z+1	; 0x01
     d7c:	82 81       	ldd	r24, Z+2	; 0x02
     d7e:	93 81       	ldd	r25, Z+3	; 0x03
     d80:	0e 2d       	mov	r16, r14
     d82:	a3 01       	movw	r20, r6
     d84:	c7 d2       	rcall	.+1422   	; 0x1314 <__ftoa_engine>
     d86:	2c 01       	movw	r4, r24
     d88:	09 81       	ldd	r16, Y+1	; 0x01
     d8a:	00 ff       	sbrs	r16, 0
     d8c:	02 c0       	rjmp	.+4      	; 0xd92 <vfprintf+0x18e>
     d8e:	03 ff       	sbrs	r16, 3
     d90:	07 c0       	rjmp	.+14     	; 0xda0 <vfprintf+0x19c>
     d92:	31 fc       	sbrc	r3, 1
     d94:	08 c0       	rjmp	.+16     	; 0xda6 <vfprintf+0x1a2>
     d96:	32 fe       	sbrs	r3, 2
     d98:	09 c0       	rjmp	.+18     	; 0xdac <vfprintf+0x1a8>
     d9a:	30 e2       	ldi	r19, 0x20	; 32
     d9c:	23 2e       	mov	r2, r19
     d9e:	07 c0       	rjmp	.+14     	; 0xdae <vfprintf+0x1aa>
     da0:	2d e2       	ldi	r18, 0x2D	; 45
     da2:	22 2e       	mov	r2, r18
     da4:	04 c0       	rjmp	.+8      	; 0xdae <vfprintf+0x1aa>
     da6:	9b e2       	ldi	r25, 0x2B	; 43
     da8:	29 2e       	mov	r2, r25
     daa:	01 c0       	rjmp	.+2      	; 0xdae <vfprintf+0x1aa>
     dac:	21 2c       	mov	r2, r1
     dae:	80 2f       	mov	r24, r16
     db0:	8c 70       	andi	r24, 0x0C	; 12
     db2:	19 f0       	breq	.+6      	; 0xdba <vfprintf+0x1b6>
     db4:	21 10       	cpse	r2, r1
     db6:	51 c2       	rjmp	.+1186   	; 0x125a <__stack+0x15b>
     db8:	8d c2       	rjmp	.+1306   	; 0x12d4 <__stack+0x1d5>
     dba:	37 fe       	sbrs	r3, 7
     dbc:	0f c0       	rjmp	.+30     	; 0xddc <vfprintf+0x1d8>
     dbe:	e4 0c       	add	r14, r4
     dc0:	04 ff       	sbrs	r16, 4
     dc2:	04 c0       	rjmp	.+8      	; 0xdcc <vfprintf+0x1c8>
     dc4:	8a 81       	ldd	r24, Y+2	; 0x02
     dc6:	81 33       	cpi	r24, 0x31	; 49
     dc8:	09 f4       	brne	.+2      	; 0xdcc <vfprintf+0x1c8>
     dca:	ea 94       	dec	r14
     dcc:	1e 14       	cp	r1, r14
     dce:	74 f5       	brge	.+92     	; 0xe2c <vfprintf+0x228>
     dd0:	f8 e0       	ldi	r31, 0x08	; 8
     dd2:	fe 15       	cp	r31, r14
     dd4:	78 f5       	brcc	.+94     	; 0xe34 <vfprintf+0x230>
     dd6:	88 e0       	ldi	r24, 0x08	; 8
     dd8:	e8 2e       	mov	r14, r24
     dda:	2c c0       	rjmp	.+88     	; 0xe34 <vfprintf+0x230>
     ddc:	36 fc       	sbrc	r3, 6
     dde:	2a c0       	rjmp	.+84     	; 0xe34 <vfprintf+0x230>
     de0:	81 2f       	mov	r24, r17
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	84 15       	cp	r24, r4
     de6:	95 05       	cpc	r25, r5
     de8:	9c f0       	brlt	.+38     	; 0xe10 <vfprintf+0x20c>
     dea:	2c ef       	ldi	r18, 0xFC	; 252
     dec:	42 16       	cp	r4, r18
     dee:	2f ef       	ldi	r18, 0xFF	; 255
     df0:	52 06       	cpc	r5, r18
     df2:	74 f0       	brlt	.+28     	; 0xe10 <vfprintf+0x20c>
     df4:	43 2d       	mov	r20, r3
     df6:	40 68       	ori	r20, 0x80	; 128
     df8:	34 2e       	mov	r3, r20
     dfa:	0a c0       	rjmp	.+20     	; 0xe10 <vfprintf+0x20c>
     dfc:	e2 e0       	ldi	r30, 0x02	; 2
     dfe:	f0 e0       	ldi	r31, 0x00	; 0
     e00:	ec 0f       	add	r30, r28
     e02:	fd 1f       	adc	r31, r29
     e04:	e1 0f       	add	r30, r17
     e06:	f1 1d       	adc	r31, r1
     e08:	80 81       	ld	r24, Z
     e0a:	80 33       	cpi	r24, 0x30	; 48
     e0c:	19 f4       	brne	.+6      	; 0xe14 <vfprintf+0x210>
     e0e:	11 50       	subi	r17, 0x01	; 1
     e10:	11 11       	cpse	r17, r1
     e12:	f4 cf       	rjmp	.-24     	; 0xdfc <vfprintf+0x1f8>
     e14:	37 fe       	sbrs	r3, 7
     e16:	0e c0       	rjmp	.+28     	; 0xe34 <vfprintf+0x230>
     e18:	ee 24       	eor	r14, r14
     e1a:	e3 94       	inc	r14
     e1c:	e1 0e       	add	r14, r17
     e1e:	81 2f       	mov	r24, r17
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	48 16       	cp	r4, r24
     e24:	59 06       	cpc	r5, r25
     e26:	2c f4       	brge	.+10     	; 0xe32 <vfprintf+0x22e>
     e28:	14 19       	sub	r17, r4
     e2a:	04 c0       	rjmp	.+8      	; 0xe34 <vfprintf+0x230>
     e2c:	ee 24       	eor	r14, r14
     e2e:	e3 94       	inc	r14
     e30:	01 c0       	rjmp	.+2      	; 0xe34 <vfprintf+0x230>
     e32:	10 e0       	ldi	r17, 0x00	; 0
     e34:	37 fe       	sbrs	r3, 7
     e36:	06 c0       	rjmp	.+12     	; 0xe44 <vfprintf+0x240>
     e38:	14 14       	cp	r1, r4
     e3a:	15 04       	cpc	r1, r5
     e3c:	34 f4       	brge	.+12     	; 0xe4a <vfprintf+0x246>
     e3e:	c2 01       	movw	r24, r4
     e40:	01 96       	adiw	r24, 0x01	; 1
     e42:	05 c0       	rjmp	.+10     	; 0xe4e <vfprintf+0x24a>
     e44:	85 e0       	ldi	r24, 0x05	; 5
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	02 c0       	rjmp	.+4      	; 0xe4e <vfprintf+0x24a>
     e4a:	81 e0       	ldi	r24, 0x01	; 1
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	21 10       	cpse	r2, r1
     e50:	01 96       	adiw	r24, 0x01	; 1
     e52:	11 23       	and	r17, r17
     e54:	31 f0       	breq	.+12     	; 0xe62 <vfprintf+0x25e>
     e56:	21 2f       	mov	r18, r17
     e58:	30 e0       	ldi	r19, 0x00	; 0
     e5a:	2f 5f       	subi	r18, 0xFF	; 255
     e5c:	3f 4f       	sbci	r19, 0xFF	; 255
     e5e:	82 0f       	add	r24, r18
     e60:	93 1f       	adc	r25, r19
     e62:	2f 2d       	mov	r18, r15
     e64:	30 e0       	ldi	r19, 0x00	; 0
     e66:	82 17       	cp	r24, r18
     e68:	93 07       	cpc	r25, r19
     e6a:	14 f4       	brge	.+4      	; 0xe70 <vfprintf+0x26c>
     e6c:	f8 1a       	sub	r15, r24
     e6e:	01 c0       	rjmp	.+2      	; 0xe72 <vfprintf+0x26e>
     e70:	f1 2c       	mov	r15, r1
     e72:	83 2d       	mov	r24, r3
     e74:	89 70       	andi	r24, 0x09	; 9
     e76:	41 f4       	brne	.+16     	; 0xe88 <vfprintf+0x284>
     e78:	ff 20       	and	r15, r15
     e7a:	31 f0       	breq	.+12     	; 0xe88 <vfprintf+0x284>
     e7c:	b6 01       	movw	r22, r12
     e7e:	80 e2       	ldi	r24, 0x20	; 32
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	36 d3       	rcall	.+1644   	; 0x14f0 <fputc>
     e84:	fa 94       	dec	r15
     e86:	f8 cf       	rjmp	.-16     	; 0xe78 <vfprintf+0x274>
     e88:	22 20       	and	r2, r2
     e8a:	21 f0       	breq	.+8      	; 0xe94 <vfprintf+0x290>
     e8c:	b6 01       	movw	r22, r12
     e8e:	82 2d       	mov	r24, r2
     e90:	90 e0       	ldi	r25, 0x00	; 0
     e92:	2e d3       	rcall	.+1628   	; 0x14f0 <fputc>
     e94:	33 fc       	sbrc	r3, 3
     e96:	08 c0       	rjmp	.+16     	; 0xea8 <vfprintf+0x2a4>
     e98:	ff 20       	and	r15, r15
     e9a:	31 f0       	breq	.+12     	; 0xea8 <vfprintf+0x2a4>
     e9c:	b6 01       	movw	r22, r12
     e9e:	80 e3       	ldi	r24, 0x30	; 48
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	26 d3       	rcall	.+1612   	; 0x14f0 <fputc>
     ea4:	fa 94       	dec	r15
     ea6:	f8 cf       	rjmp	.-16     	; 0xe98 <vfprintf+0x294>
     ea8:	37 fe       	sbrs	r3, 7
     eaa:	58 c0       	rjmp	.+176    	; 0xf5c <vfprintf+0x358>
     eac:	94 2d       	mov	r25, r4
     eae:	85 2d       	mov	r24, r5
     eb0:	57 fe       	sbrs	r5, 7
     eb2:	02 c0       	rjmp	.+4      	; 0xeb8 <vfprintf+0x2b4>
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	80 e0       	ldi	r24, 0x00	; 0
     eb8:	29 2e       	mov	r2, r25
     eba:	38 2e       	mov	r3, r24
     ebc:	20 e0       	ldi	r18, 0x00	; 0
     ebe:	30 e0       	ldi	r19, 0x00	; 0
     ec0:	a2 01       	movw	r20, r4
     ec2:	4e 19       	sub	r20, r14
     ec4:	51 09       	sbc	r21, r1
     ec6:	5d 87       	std	Y+13, r21	; 0x0d
     ec8:	4c 87       	std	Y+12, r20	; 0x0c
     eca:	a2 01       	movw	r20, r4
     ecc:	42 19       	sub	r20, r2
     ece:	53 09       	sbc	r21, r3
     ed0:	5f 87       	std	Y+15, r21	; 0x0f
     ed2:	4e 87       	std	Y+14, r20	; 0x0e
     ed4:	61 2f       	mov	r22, r17
     ed6:	70 e0       	ldi	r23, 0x00	; 0
     ed8:	44 27       	eor	r20, r20
     eda:	55 27       	eor	r21, r21
     edc:	46 1b       	sub	r20, r22
     ede:	57 0b       	sbc	r21, r23
     ee0:	59 8b       	std	Y+17, r21	; 0x11
     ee2:	48 8b       	std	Y+16, r20	; 0x10
     ee4:	5f ef       	ldi	r21, 0xFF	; 255
     ee6:	25 16       	cp	r2, r21
     ee8:	35 06       	cpc	r3, r21
     eea:	41 f4       	brne	.+16     	; 0xefc <vfprintf+0x2f8>
     eec:	b6 01       	movw	r22, r12
     eee:	8e e2       	ldi	r24, 0x2E	; 46
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	2a 8b       	std	Y+18, r18	; 0x12
     ef4:	3b 8b       	std	Y+19, r19	; 0x13
     ef6:	fc d2       	rcall	.+1528   	; 0x14f0 <fputc>
     ef8:	3b 89       	ldd	r19, Y+19	; 0x13
     efa:	2a 89       	ldd	r18, Y+18	; 0x12
     efc:	42 14       	cp	r4, r2
     efe:	53 04       	cpc	r5, r3
     f00:	6c f0       	brlt	.+26     	; 0xf1c <vfprintf+0x318>
     f02:	4c 85       	ldd	r20, Y+12	; 0x0c
     f04:	5d 85       	ldd	r21, Y+13	; 0x0d
     f06:	42 15       	cp	r20, r2
     f08:	53 05       	cpc	r21, r3
     f0a:	44 f4       	brge	.+16     	; 0xf1c <vfprintf+0x318>
     f0c:	ee 85       	ldd	r30, Y+14	; 0x0e
     f0e:	ff 85       	ldd	r31, Y+15	; 0x0f
     f10:	e2 0f       	add	r30, r18
     f12:	f3 1f       	adc	r31, r19
     f14:	e6 0d       	add	r30, r6
     f16:	f7 1d       	adc	r31, r7
     f18:	81 81       	ldd	r24, Z+1	; 0x01
     f1a:	01 c0       	rjmp	.+2      	; 0xf1e <vfprintf+0x31a>
     f1c:	80 e3       	ldi	r24, 0x30	; 48
     f1e:	51 e0       	ldi	r21, 0x01	; 1
     f20:	25 1a       	sub	r2, r21
     f22:	31 08       	sbc	r3, r1
     f24:	2f 5f       	subi	r18, 0xFF	; 255
     f26:	3f 4f       	sbci	r19, 0xFF	; 255
     f28:	48 89       	ldd	r20, Y+16	; 0x10
     f2a:	59 89       	ldd	r21, Y+17	; 0x11
     f2c:	24 16       	cp	r2, r20
     f2e:	35 06       	cpc	r3, r21
     f30:	44 f0       	brlt	.+16     	; 0xf42 <vfprintf+0x33e>
     f32:	b6 01       	movw	r22, r12
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	2a 8b       	std	Y+18, r18	; 0x12
     f38:	3b 8b       	std	Y+19, r19	; 0x13
     f3a:	da d2       	rcall	.+1460   	; 0x14f0 <fputc>
     f3c:	2a 89       	ldd	r18, Y+18	; 0x12
     f3e:	3b 89       	ldd	r19, Y+19	; 0x13
     f40:	d1 cf       	rjmp	.-94     	; 0xee4 <vfprintf+0x2e0>
     f42:	24 14       	cp	r2, r4
     f44:	35 04       	cpc	r3, r5
     f46:	39 f4       	brne	.+14     	; 0xf56 <vfprintf+0x352>
     f48:	9a 81       	ldd	r25, Y+2	; 0x02
     f4a:	96 33       	cpi	r25, 0x36	; 54
     f4c:	18 f4       	brcc	.+6      	; 0xf54 <vfprintf+0x350>
     f4e:	95 33       	cpi	r25, 0x35	; 53
     f50:	11 f4       	brne	.+4      	; 0xf56 <vfprintf+0x352>
     f52:	04 ff       	sbrs	r16, 4
     f54:	81 e3       	ldi	r24, 0x31	; 49
     f56:	b6 01       	movw	r22, r12
     f58:	90 e0       	ldi	r25, 0x00	; 0
     f5a:	45 c0       	rjmp	.+138    	; 0xfe6 <vfprintf+0x3e2>
     f5c:	8a 81       	ldd	r24, Y+2	; 0x02
     f5e:	81 33       	cpi	r24, 0x31	; 49
     f60:	09 f0       	breq	.+2      	; 0xf64 <vfprintf+0x360>
     f62:	0f 7e       	andi	r16, 0xEF	; 239
     f64:	b6 01       	movw	r22, r12
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	c3 d2       	rcall	.+1414   	; 0x14f0 <fputc>
     f6a:	11 11       	cpse	r17, r1
     f6c:	05 c0       	rjmp	.+10     	; 0xf78 <vfprintf+0x374>
     f6e:	34 fc       	sbrc	r3, 4
     f70:	16 c0       	rjmp	.+44     	; 0xf9e <vfprintf+0x39a>
     f72:	85 e6       	ldi	r24, 0x65	; 101
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	15 c0       	rjmp	.+42     	; 0xfa2 <vfprintf+0x39e>
     f78:	b6 01       	movw	r22, r12
     f7a:	8e e2       	ldi	r24, 0x2E	; 46
     f7c:	90 e0       	ldi	r25, 0x00	; 0
     f7e:	b8 d2       	rcall	.+1392   	; 0x14f0 <fputc>
     f80:	82 e0       	ldi	r24, 0x02	; 2
     f82:	ee 24       	eor	r14, r14
     f84:	e3 94       	inc	r14
     f86:	e8 0e       	add	r14, r24
     f88:	f3 01       	movw	r30, r6
     f8a:	e8 0f       	add	r30, r24
     f8c:	f1 1d       	adc	r31, r1
     f8e:	80 81       	ld	r24, Z
     f90:	b6 01       	movw	r22, r12
     f92:	90 e0       	ldi	r25, 0x00	; 0
     f94:	ad d2       	rcall	.+1370   	; 0x14f0 <fputc>
     f96:	11 50       	subi	r17, 0x01	; 1
     f98:	8e 2d       	mov	r24, r14
     f9a:	99 f7       	brne	.-26     	; 0xf82 <vfprintf+0x37e>
     f9c:	e8 cf       	rjmp	.-48     	; 0xf6e <vfprintf+0x36a>
     f9e:	85 e4       	ldi	r24, 0x45	; 69
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	b6 01       	movw	r22, r12
     fa4:	a5 d2       	rcall	.+1354   	; 0x14f0 <fputc>
     fa6:	57 fc       	sbrc	r5, 7
     fa8:	05 c0       	rjmp	.+10     	; 0xfb4 <vfprintf+0x3b0>
     faa:	41 14       	cp	r4, r1
     fac:	51 04       	cpc	r5, r1
     fae:	39 f4       	brne	.+14     	; 0xfbe <vfprintf+0x3ba>
     fb0:	04 ff       	sbrs	r16, 4
     fb2:	05 c0       	rjmp	.+10     	; 0xfbe <vfprintf+0x3ba>
     fb4:	51 94       	neg	r5
     fb6:	41 94       	neg	r4
     fb8:	51 08       	sbc	r5, r1
     fba:	8d e2       	ldi	r24, 0x2D	; 45
     fbc:	01 c0       	rjmp	.+2      	; 0xfc0 <vfprintf+0x3bc>
     fbe:	8b e2       	ldi	r24, 0x2B	; 43
     fc0:	b6 01       	movw	r22, r12
     fc2:	90 e0       	ldi	r25, 0x00	; 0
     fc4:	95 d2       	rcall	.+1322   	; 0x14f0 <fputc>
     fc6:	80 e3       	ldi	r24, 0x30	; 48
     fc8:	9a e0       	ldi	r25, 0x0A	; 10
     fca:	49 16       	cp	r4, r25
     fcc:	51 04       	cpc	r5, r1
     fce:	2c f0       	brlt	.+10     	; 0xfda <vfprintf+0x3d6>
     fd0:	8f 5f       	subi	r24, 0xFF	; 255
     fd2:	5a e0       	ldi	r21, 0x0A	; 10
     fd4:	45 1a       	sub	r4, r21
     fd6:	51 08       	sbc	r5, r1
     fd8:	f7 cf       	rjmp	.-18     	; 0xfc8 <vfprintf+0x3c4>
     fda:	b6 01       	movw	r22, r12
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	88 d2       	rcall	.+1296   	; 0x14f0 <fputc>
     fe0:	b6 01       	movw	r22, r12
     fe2:	c2 01       	movw	r24, r4
     fe4:	c0 96       	adiw	r24, 0x30	; 48
     fe6:	84 d2       	rcall	.+1288   	; 0x14f0 <fputc>
     fe8:	4c c1       	rjmp	.+664    	; 0x1282 <__stack+0x183>
     fea:	83 36       	cpi	r24, 0x63	; 99
     fec:	31 f0       	breq	.+12     	; 0xffa <vfprintf+0x3f6>
     fee:	83 37       	cpi	r24, 0x73	; 115
     ff0:	79 f0       	breq	.+30     	; 0x1010 <vfprintf+0x40c>
     ff2:	83 35       	cpi	r24, 0x53	; 83
     ff4:	09 f0       	breq	.+2      	; 0xff8 <vfprintf+0x3f4>
     ff6:	54 c0       	rjmp	.+168    	; 0x10a0 <vfprintf+0x49c>
     ff8:	20 c0       	rjmp	.+64     	; 0x103a <vfprintf+0x436>
     ffa:	52 01       	movw	r10, r4
     ffc:	e2 e0       	ldi	r30, 0x02	; 2
     ffe:	ae 0e       	add	r10, r30
    1000:	b1 1c       	adc	r11, r1
    1002:	f2 01       	movw	r30, r4
    1004:	80 81       	ld	r24, Z
    1006:	89 83       	std	Y+1, r24	; 0x01
    1008:	01 e0       	ldi	r16, 0x01	; 1
    100a:	10 e0       	ldi	r17, 0x00	; 0
    100c:	23 01       	movw	r4, r6
    100e:	13 c0       	rjmp	.+38     	; 0x1036 <vfprintf+0x432>
    1010:	52 01       	movw	r10, r4
    1012:	f2 e0       	ldi	r31, 0x02	; 2
    1014:	af 0e       	add	r10, r31
    1016:	b1 1c       	adc	r11, r1
    1018:	f2 01       	movw	r30, r4
    101a:	40 80       	ld	r4, Z
    101c:	51 80       	ldd	r5, Z+1	; 0x01
    101e:	26 ff       	sbrs	r18, 6
    1020:	03 c0       	rjmp	.+6      	; 0x1028 <vfprintf+0x424>
    1022:	61 2f       	mov	r22, r17
    1024:	70 e0       	ldi	r23, 0x00	; 0
    1026:	02 c0       	rjmp	.+4      	; 0x102c <vfprintf+0x428>
    1028:	6f ef       	ldi	r22, 0xFF	; 255
    102a:	7f ef       	ldi	r23, 0xFF	; 255
    102c:	c2 01       	movw	r24, r4
    102e:	2a 8b       	std	Y+18, r18	; 0x12
    1030:	54 d2       	rcall	.+1192   	; 0x14da <strnlen>
    1032:	8c 01       	movw	r16, r24
    1034:	2a 89       	ldd	r18, Y+18	; 0x12
    1036:	2f 77       	andi	r18, 0x7F	; 127
    1038:	14 c0       	rjmp	.+40     	; 0x1062 <vfprintf+0x45e>
    103a:	52 01       	movw	r10, r4
    103c:	f2 e0       	ldi	r31, 0x02	; 2
    103e:	af 0e       	add	r10, r31
    1040:	b1 1c       	adc	r11, r1
    1042:	f2 01       	movw	r30, r4
    1044:	40 80       	ld	r4, Z
    1046:	51 80       	ldd	r5, Z+1	; 0x01
    1048:	26 ff       	sbrs	r18, 6
    104a:	03 c0       	rjmp	.+6      	; 0x1052 <vfprintf+0x44e>
    104c:	61 2f       	mov	r22, r17
    104e:	70 e0       	ldi	r23, 0x00	; 0
    1050:	02 c0       	rjmp	.+4      	; 0x1056 <vfprintf+0x452>
    1052:	6f ef       	ldi	r22, 0xFF	; 255
    1054:	7f ef       	ldi	r23, 0xFF	; 255
    1056:	c2 01       	movw	r24, r4
    1058:	2a 8b       	std	Y+18, r18	; 0x12
    105a:	34 d2       	rcall	.+1128   	; 0x14c4 <strnlen_P>
    105c:	8c 01       	movw	r16, r24
    105e:	2a 89       	ldd	r18, Y+18	; 0x12
    1060:	20 68       	ori	r18, 0x80	; 128
    1062:	32 2e       	mov	r3, r18
    1064:	23 fd       	sbrc	r18, 3
    1066:	18 c0       	rjmp	.+48     	; 0x1098 <vfprintf+0x494>
    1068:	8f 2d       	mov	r24, r15
    106a:	90 e0       	ldi	r25, 0x00	; 0
    106c:	08 17       	cp	r16, r24
    106e:	19 07       	cpc	r17, r25
    1070:	98 f4       	brcc	.+38     	; 0x1098 <vfprintf+0x494>
    1072:	b6 01       	movw	r22, r12
    1074:	80 e2       	ldi	r24, 0x20	; 32
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	3b d2       	rcall	.+1142   	; 0x14f0 <fputc>
    107a:	fa 94       	dec	r15
    107c:	f5 cf       	rjmp	.-22     	; 0x1068 <vfprintf+0x464>
    107e:	f2 01       	movw	r30, r4
    1080:	37 fc       	sbrc	r3, 7
    1082:	85 91       	lpm	r24, Z+
    1084:	37 fe       	sbrs	r3, 7
    1086:	81 91       	ld	r24, Z+
    1088:	2f 01       	movw	r4, r30
    108a:	b6 01       	movw	r22, r12
    108c:	90 e0       	ldi	r25, 0x00	; 0
    108e:	30 d2       	rcall	.+1120   	; 0x14f0 <fputc>
    1090:	f1 10       	cpse	r15, r1
    1092:	fa 94       	dec	r15
    1094:	01 50       	subi	r16, 0x01	; 1
    1096:	11 09       	sbc	r17, r1
    1098:	01 15       	cp	r16, r1
    109a:	11 05       	cpc	r17, r1
    109c:	81 f7       	brne	.-32     	; 0x107e <vfprintf+0x47a>
    109e:	f1 c0       	rjmp	.+482    	; 0x1282 <__stack+0x183>
    10a0:	84 36       	cpi	r24, 0x64	; 100
    10a2:	11 f0       	breq	.+4      	; 0x10a8 <vfprintf+0x4a4>
    10a4:	89 36       	cpi	r24, 0x69	; 105
    10a6:	51 f5       	brne	.+84     	; 0x10fc <vfprintf+0x4f8>
    10a8:	52 01       	movw	r10, r4
    10aa:	27 ff       	sbrs	r18, 7
    10ac:	09 c0       	rjmp	.+18     	; 0x10c0 <vfprintf+0x4bc>
    10ae:	f4 e0       	ldi	r31, 0x04	; 4
    10b0:	af 0e       	add	r10, r31
    10b2:	b1 1c       	adc	r11, r1
    10b4:	f2 01       	movw	r30, r4
    10b6:	60 81       	ld	r22, Z
    10b8:	71 81       	ldd	r23, Z+1	; 0x01
    10ba:	82 81       	ldd	r24, Z+2	; 0x02
    10bc:	93 81       	ldd	r25, Z+3	; 0x03
    10be:	0a c0       	rjmp	.+20     	; 0x10d4 <vfprintf+0x4d0>
    10c0:	f2 e0       	ldi	r31, 0x02	; 2
    10c2:	af 0e       	add	r10, r31
    10c4:	b1 1c       	adc	r11, r1
    10c6:	f2 01       	movw	r30, r4
    10c8:	60 81       	ld	r22, Z
    10ca:	71 81       	ldd	r23, Z+1	; 0x01
    10cc:	07 2e       	mov	r0, r23
    10ce:	00 0c       	add	r0, r0
    10d0:	88 0b       	sbc	r24, r24
    10d2:	99 0b       	sbc	r25, r25
    10d4:	2f 76       	andi	r18, 0x6F	; 111
    10d6:	32 2e       	mov	r3, r18
    10d8:	97 ff       	sbrs	r25, 7
    10da:	09 c0       	rjmp	.+18     	; 0x10ee <vfprintf+0x4ea>
    10dc:	90 95       	com	r25
    10de:	80 95       	com	r24
    10e0:	70 95       	com	r23
    10e2:	61 95       	neg	r22
    10e4:	7f 4f       	sbci	r23, 0xFF	; 255
    10e6:	8f 4f       	sbci	r24, 0xFF	; 255
    10e8:	9f 4f       	sbci	r25, 0xFF	; 255
    10ea:	20 68       	ori	r18, 0x80	; 128
    10ec:	32 2e       	mov	r3, r18
    10ee:	2a e0       	ldi	r18, 0x0A	; 10
    10f0:	30 e0       	ldi	r19, 0x00	; 0
    10f2:	a3 01       	movw	r20, r6
    10f4:	a7 d2       	rcall	.+1358   	; 0x1644 <__ultoa_invert>
    10f6:	e8 2e       	mov	r14, r24
    10f8:	e6 18       	sub	r14, r6
    10fa:	3e c0       	rjmp	.+124    	; 0x1178 <__stack+0x79>
    10fc:	02 2f       	mov	r16, r18
    10fe:	85 37       	cpi	r24, 0x75	; 117
    1100:	21 f4       	brne	.+8      	; 0x110a <__stack+0xb>
    1102:	0f 7e       	andi	r16, 0xEF	; 239
    1104:	2a e0       	ldi	r18, 0x0A	; 10
    1106:	30 e0       	ldi	r19, 0x00	; 0
    1108:	1d c0       	rjmp	.+58     	; 0x1144 <__stack+0x45>
    110a:	09 7f       	andi	r16, 0xF9	; 249
    110c:	8f 36       	cpi	r24, 0x6F	; 111
    110e:	91 f0       	breq	.+36     	; 0x1134 <__stack+0x35>
    1110:	18 f4       	brcc	.+6      	; 0x1118 <__stack+0x19>
    1112:	88 35       	cpi	r24, 0x58	; 88
    1114:	59 f0       	breq	.+22     	; 0x112c <__stack+0x2d>
    1116:	be c0       	rjmp	.+380    	; 0x1294 <__stack+0x195>
    1118:	80 37       	cpi	r24, 0x70	; 112
    111a:	19 f0       	breq	.+6      	; 0x1122 <__stack+0x23>
    111c:	88 37       	cpi	r24, 0x78	; 120
    111e:	11 f0       	breq	.+4      	; 0x1124 <__stack+0x25>
    1120:	b9 c0       	rjmp	.+370    	; 0x1294 <__stack+0x195>
    1122:	00 61       	ori	r16, 0x10	; 16
    1124:	04 ff       	sbrs	r16, 4
    1126:	09 c0       	rjmp	.+18     	; 0x113a <__stack+0x3b>
    1128:	04 60       	ori	r16, 0x04	; 4
    112a:	07 c0       	rjmp	.+14     	; 0x113a <__stack+0x3b>
    112c:	24 ff       	sbrs	r18, 4
    112e:	08 c0       	rjmp	.+16     	; 0x1140 <__stack+0x41>
    1130:	06 60       	ori	r16, 0x06	; 6
    1132:	06 c0       	rjmp	.+12     	; 0x1140 <__stack+0x41>
    1134:	28 e0       	ldi	r18, 0x08	; 8
    1136:	30 e0       	ldi	r19, 0x00	; 0
    1138:	05 c0       	rjmp	.+10     	; 0x1144 <__stack+0x45>
    113a:	20 e1       	ldi	r18, 0x10	; 16
    113c:	30 e0       	ldi	r19, 0x00	; 0
    113e:	02 c0       	rjmp	.+4      	; 0x1144 <__stack+0x45>
    1140:	20 e1       	ldi	r18, 0x10	; 16
    1142:	32 e0       	ldi	r19, 0x02	; 2
    1144:	52 01       	movw	r10, r4
    1146:	07 ff       	sbrs	r16, 7
    1148:	09 c0       	rjmp	.+18     	; 0x115c <__stack+0x5d>
    114a:	f4 e0       	ldi	r31, 0x04	; 4
    114c:	af 0e       	add	r10, r31
    114e:	b1 1c       	adc	r11, r1
    1150:	f2 01       	movw	r30, r4
    1152:	60 81       	ld	r22, Z
    1154:	71 81       	ldd	r23, Z+1	; 0x01
    1156:	82 81       	ldd	r24, Z+2	; 0x02
    1158:	93 81       	ldd	r25, Z+3	; 0x03
    115a:	08 c0       	rjmp	.+16     	; 0x116c <__stack+0x6d>
    115c:	f2 e0       	ldi	r31, 0x02	; 2
    115e:	af 0e       	add	r10, r31
    1160:	b1 1c       	adc	r11, r1
    1162:	f2 01       	movw	r30, r4
    1164:	60 81       	ld	r22, Z
    1166:	71 81       	ldd	r23, Z+1	; 0x01
    1168:	80 e0       	ldi	r24, 0x00	; 0
    116a:	90 e0       	ldi	r25, 0x00	; 0
    116c:	a3 01       	movw	r20, r6
    116e:	6a d2       	rcall	.+1236   	; 0x1644 <__ultoa_invert>
    1170:	e8 2e       	mov	r14, r24
    1172:	e6 18       	sub	r14, r6
    1174:	0f 77       	andi	r16, 0x7F	; 127
    1176:	30 2e       	mov	r3, r16
    1178:	36 fe       	sbrs	r3, 6
    117a:	0b c0       	rjmp	.+22     	; 0x1192 <__stack+0x93>
    117c:	33 2d       	mov	r19, r3
    117e:	3e 7f       	andi	r19, 0xFE	; 254
    1180:	e1 16       	cp	r14, r17
    1182:	50 f4       	brcc	.+20     	; 0x1198 <__stack+0x99>
    1184:	34 fe       	sbrs	r3, 4
    1186:	0a c0       	rjmp	.+20     	; 0x119c <__stack+0x9d>
    1188:	32 fc       	sbrc	r3, 2
    118a:	08 c0       	rjmp	.+16     	; 0x119c <__stack+0x9d>
    118c:	33 2d       	mov	r19, r3
    118e:	3e 7e       	andi	r19, 0xEE	; 238
    1190:	05 c0       	rjmp	.+10     	; 0x119c <__stack+0x9d>
    1192:	0e 2d       	mov	r16, r14
    1194:	33 2d       	mov	r19, r3
    1196:	03 c0       	rjmp	.+6      	; 0x119e <__stack+0x9f>
    1198:	0e 2d       	mov	r16, r14
    119a:	01 c0       	rjmp	.+2      	; 0x119e <__stack+0x9f>
    119c:	01 2f       	mov	r16, r17
    119e:	34 ff       	sbrs	r19, 4
    11a0:	0c c0       	rjmp	.+24     	; 0x11ba <__stack+0xbb>
    11a2:	fe 01       	movw	r30, r28
    11a4:	ee 0d       	add	r30, r14
    11a6:	f1 1d       	adc	r31, r1
    11a8:	80 81       	ld	r24, Z
    11aa:	80 33       	cpi	r24, 0x30	; 48
    11ac:	11 f4       	brne	.+4      	; 0x11b2 <__stack+0xb3>
    11ae:	39 7e       	andi	r19, 0xE9	; 233
    11b0:	08 c0       	rjmp	.+16     	; 0x11c2 <__stack+0xc3>
    11b2:	32 ff       	sbrs	r19, 2
    11b4:	05 c0       	rjmp	.+10     	; 0x11c0 <__stack+0xc1>
    11b6:	0e 5f       	subi	r16, 0xFE	; 254
    11b8:	04 c0       	rjmp	.+8      	; 0x11c2 <__stack+0xc3>
    11ba:	83 2f       	mov	r24, r19
    11bc:	86 78       	andi	r24, 0x86	; 134
    11be:	09 f0       	breq	.+2      	; 0x11c2 <__stack+0xc3>
    11c0:	0f 5f       	subi	r16, 0xFF	; 255
    11c2:	33 fd       	sbrc	r19, 3
    11c4:	12 c0       	rjmp	.+36     	; 0x11ea <__stack+0xeb>
    11c6:	30 ff       	sbrs	r19, 0
    11c8:	06 c0       	rjmp	.+12     	; 0x11d6 <__stack+0xd7>
    11ca:	1e 2d       	mov	r17, r14
    11cc:	0f 15       	cp	r16, r15
    11ce:	18 f4       	brcc	.+6      	; 0x11d6 <__stack+0xd7>
    11d0:	1f 0d       	add	r17, r15
    11d2:	10 1b       	sub	r17, r16
    11d4:	0f 2d       	mov	r16, r15
    11d6:	0f 15       	cp	r16, r15
    11d8:	60 f4       	brcc	.+24     	; 0x11f2 <__stack+0xf3>
    11da:	b6 01       	movw	r22, r12
    11dc:	80 e2       	ldi	r24, 0x20	; 32
    11de:	90 e0       	ldi	r25, 0x00	; 0
    11e0:	3b 8b       	std	Y+19, r19	; 0x13
    11e2:	86 d1       	rcall	.+780    	; 0x14f0 <fputc>
    11e4:	0f 5f       	subi	r16, 0xFF	; 255
    11e6:	3b 89       	ldd	r19, Y+19	; 0x13
    11e8:	f6 cf       	rjmp	.-20     	; 0x11d6 <__stack+0xd7>
    11ea:	0f 15       	cp	r16, r15
    11ec:	10 f4       	brcc	.+4      	; 0x11f2 <__stack+0xf3>
    11ee:	f0 1a       	sub	r15, r16
    11f0:	01 c0       	rjmp	.+2      	; 0x11f4 <__stack+0xf5>
    11f2:	f1 2c       	mov	r15, r1
    11f4:	34 ff       	sbrs	r19, 4
    11f6:	11 c0       	rjmp	.+34     	; 0x121a <__stack+0x11b>
    11f8:	b6 01       	movw	r22, r12
    11fa:	80 e3       	ldi	r24, 0x30	; 48
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	3b 8b       	std	Y+19, r19	; 0x13
    1200:	77 d1       	rcall	.+750    	; 0x14f0 <fputc>
    1202:	3b 89       	ldd	r19, Y+19	; 0x13
    1204:	32 ff       	sbrs	r19, 2
    1206:	16 c0       	rjmp	.+44     	; 0x1234 <__stack+0x135>
    1208:	31 fd       	sbrc	r19, 1
    120a:	03 c0       	rjmp	.+6      	; 0x1212 <__stack+0x113>
    120c:	88 e7       	ldi	r24, 0x78	; 120
    120e:	90 e0       	ldi	r25, 0x00	; 0
    1210:	02 c0       	rjmp	.+4      	; 0x1216 <__stack+0x117>
    1212:	88 e5       	ldi	r24, 0x58	; 88
    1214:	90 e0       	ldi	r25, 0x00	; 0
    1216:	b6 01       	movw	r22, r12
    1218:	0c c0       	rjmp	.+24     	; 0x1232 <__stack+0x133>
    121a:	83 2f       	mov	r24, r19
    121c:	86 78       	andi	r24, 0x86	; 134
    121e:	51 f0       	breq	.+20     	; 0x1234 <__stack+0x135>
    1220:	31 ff       	sbrs	r19, 1
    1222:	02 c0       	rjmp	.+4      	; 0x1228 <__stack+0x129>
    1224:	8b e2       	ldi	r24, 0x2B	; 43
    1226:	01 c0       	rjmp	.+2      	; 0x122a <__stack+0x12b>
    1228:	80 e2       	ldi	r24, 0x20	; 32
    122a:	37 fd       	sbrc	r19, 7
    122c:	8d e2       	ldi	r24, 0x2D	; 45
    122e:	b6 01       	movw	r22, r12
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	5e d1       	rcall	.+700    	; 0x14f0 <fputc>
    1234:	e1 16       	cp	r14, r17
    1236:	30 f4       	brcc	.+12     	; 0x1244 <__stack+0x145>
    1238:	b6 01       	movw	r22, r12
    123a:	80 e3       	ldi	r24, 0x30	; 48
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	58 d1       	rcall	.+688    	; 0x14f0 <fputc>
    1240:	11 50       	subi	r17, 0x01	; 1
    1242:	f8 cf       	rjmp	.-16     	; 0x1234 <__stack+0x135>
    1244:	ea 94       	dec	r14
    1246:	f3 01       	movw	r30, r6
    1248:	ee 0d       	add	r30, r14
    124a:	f1 1d       	adc	r31, r1
    124c:	80 81       	ld	r24, Z
    124e:	b6 01       	movw	r22, r12
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	4e d1       	rcall	.+668    	; 0x14f0 <fputc>
    1254:	e1 10       	cpse	r14, r1
    1256:	f6 cf       	rjmp	.-20     	; 0x1244 <__stack+0x145>
    1258:	14 c0       	rjmp	.+40     	; 0x1282 <__stack+0x183>
    125a:	f4 e0       	ldi	r31, 0x04	; 4
    125c:	ff 15       	cp	r31, r15
    125e:	48 f5       	brcc	.+82     	; 0x12b2 <__stack+0x1b3>
    1260:	84 e0       	ldi	r24, 0x04	; 4
    1262:	f8 1a       	sub	r15, r24
    1264:	33 fe       	sbrs	r3, 3
    1266:	1d c0       	rjmp	.+58     	; 0x12a2 <__stack+0x1a3>
    1268:	21 10       	cpse	r2, r1
    126a:	24 c0       	rjmp	.+72     	; 0x12b4 <__stack+0x1b5>
    126c:	03 ff       	sbrs	r16, 3
    126e:	27 c0       	rjmp	.+78     	; 0x12be <__stack+0x1bf>
    1270:	0c e8       	ldi	r16, 0x8C	; 140
    1272:	10 e0       	ldi	r17, 0x00	; 0
    1274:	f3 2d       	mov	r31, r3
    1276:	f0 71       	andi	r31, 0x10	; 16
    1278:	3f 2e       	mov	r3, r31
    127a:	f8 01       	movw	r30, r16
    127c:	84 91       	lpm	r24, Z
    127e:	81 11       	cpse	r24, r1
    1280:	21 c0       	rjmp	.+66     	; 0x12c4 <__stack+0x1c5>
    1282:	ff 20       	and	r15, r15
    1284:	09 f4       	brne	.+2      	; 0x1288 <__stack+0x189>
    1286:	fd cc       	rjmp	.-1542   	; 0xc82 <vfprintf+0x7e>
    1288:	b6 01       	movw	r22, r12
    128a:	80 e2       	ldi	r24, 0x20	; 32
    128c:	90 e0       	ldi	r25, 0x00	; 0
    128e:	30 d1       	rcall	.+608    	; 0x14f0 <fputc>
    1290:	fa 94       	dec	r15
    1292:	f7 cf       	rjmp	.-18     	; 0x1282 <__stack+0x183>
    1294:	f6 01       	movw	r30, r12
    1296:	86 81       	ldd	r24, Z+6	; 0x06
    1298:	97 81       	ldd	r25, Z+7	; 0x07
    129a:	23 c0       	rjmp	.+70     	; 0x12e2 <__stack+0x1e3>
    129c:	8f ef       	ldi	r24, 0xFF	; 255
    129e:	9f ef       	ldi	r25, 0xFF	; 255
    12a0:	20 c0       	rjmp	.+64     	; 0x12e2 <__stack+0x1e3>
    12a2:	b6 01       	movw	r22, r12
    12a4:	80 e2       	ldi	r24, 0x20	; 32
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	23 d1       	rcall	.+582    	; 0x14f0 <fputc>
    12aa:	fa 94       	dec	r15
    12ac:	f1 10       	cpse	r15, r1
    12ae:	f9 cf       	rjmp	.-14     	; 0x12a2 <__stack+0x1a3>
    12b0:	db cf       	rjmp	.-74     	; 0x1268 <__stack+0x169>
    12b2:	f1 2c       	mov	r15, r1
    12b4:	b6 01       	movw	r22, r12
    12b6:	82 2d       	mov	r24, r2
    12b8:	90 e0       	ldi	r25, 0x00	; 0
    12ba:	1a d1       	rcall	.+564    	; 0x14f0 <fputc>
    12bc:	d7 cf       	rjmp	.-82     	; 0x126c <__stack+0x16d>
    12be:	00 e9       	ldi	r16, 0x90	; 144
    12c0:	10 e0       	ldi	r17, 0x00	; 0
    12c2:	d8 cf       	rjmp	.-80     	; 0x1274 <__stack+0x175>
    12c4:	31 10       	cpse	r3, r1
    12c6:	80 52       	subi	r24, 0x20	; 32
    12c8:	b6 01       	movw	r22, r12
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	11 d1       	rcall	.+546    	; 0x14f0 <fputc>
    12ce:	0f 5f       	subi	r16, 0xFF	; 255
    12d0:	1f 4f       	sbci	r17, 0xFF	; 255
    12d2:	d3 cf       	rjmp	.-90     	; 0x127a <__stack+0x17b>
    12d4:	23 e0       	ldi	r18, 0x03	; 3
    12d6:	2f 15       	cp	r18, r15
    12d8:	10 f4       	brcc	.+4      	; 0x12de <__stack+0x1df>
    12da:	83 e0       	ldi	r24, 0x03	; 3
    12dc:	c2 cf       	rjmp	.-124    	; 0x1262 <__stack+0x163>
    12de:	f1 2c       	mov	r15, r1
    12e0:	c5 cf       	rjmp	.-118    	; 0x126c <__stack+0x16d>
    12e2:	63 96       	adiw	r28, 0x13	; 19
    12e4:	0f b6       	in	r0, 0x3f	; 63
    12e6:	f8 94       	cli
    12e8:	de bf       	out	0x3e, r29	; 62
    12ea:	0f be       	out	0x3f, r0	; 63
    12ec:	cd bf       	out	0x3d, r28	; 61
    12ee:	df 91       	pop	r29
    12f0:	cf 91       	pop	r28
    12f2:	1f 91       	pop	r17
    12f4:	0f 91       	pop	r16
    12f6:	ff 90       	pop	r15
    12f8:	ef 90       	pop	r14
    12fa:	df 90       	pop	r13
    12fc:	cf 90       	pop	r12
    12fe:	bf 90       	pop	r11
    1300:	af 90       	pop	r10
    1302:	9f 90       	pop	r9
    1304:	8f 90       	pop	r8
    1306:	7f 90       	pop	r7
    1308:	6f 90       	pop	r6
    130a:	5f 90       	pop	r5
    130c:	4f 90       	pop	r4
    130e:	3f 90       	pop	r3
    1310:	2f 90       	pop	r2
    1312:	08 95       	ret

00001314 <__ftoa_engine>:
    1314:	28 30       	cpi	r18, 0x08	; 8
    1316:	08 f0       	brcs	.+2      	; 0x131a <__ftoa_engine+0x6>
    1318:	27 e0       	ldi	r18, 0x07	; 7
    131a:	33 27       	eor	r19, r19
    131c:	da 01       	movw	r26, r20
    131e:	99 0f       	add	r25, r25
    1320:	31 1d       	adc	r19, r1
    1322:	87 fd       	sbrc	r24, 7
    1324:	91 60       	ori	r25, 0x01	; 1
    1326:	00 96       	adiw	r24, 0x00	; 0
    1328:	61 05       	cpc	r22, r1
    132a:	71 05       	cpc	r23, r1
    132c:	39 f4       	brne	.+14     	; 0x133c <__ftoa_engine+0x28>
    132e:	32 60       	ori	r19, 0x02	; 2
    1330:	2e 5f       	subi	r18, 0xFE	; 254
    1332:	3d 93       	st	X+, r19
    1334:	30 e3       	ldi	r19, 0x30	; 48
    1336:	2a 95       	dec	r18
    1338:	e1 f7       	brne	.-8      	; 0x1332 <__ftoa_engine+0x1e>
    133a:	08 95       	ret
    133c:	9f 3f       	cpi	r25, 0xFF	; 255
    133e:	30 f0       	brcs	.+12     	; 0x134c <__ftoa_engine+0x38>
    1340:	80 38       	cpi	r24, 0x80	; 128
    1342:	71 05       	cpc	r23, r1
    1344:	61 05       	cpc	r22, r1
    1346:	09 f0       	breq	.+2      	; 0x134a <__ftoa_engine+0x36>
    1348:	3c 5f       	subi	r19, 0xFC	; 252
    134a:	3c 5f       	subi	r19, 0xFC	; 252
    134c:	3d 93       	st	X+, r19
    134e:	91 30       	cpi	r25, 0x01	; 1
    1350:	08 f0       	brcs	.+2      	; 0x1354 <__ftoa_engine+0x40>
    1352:	80 68       	ori	r24, 0x80	; 128
    1354:	91 1d       	adc	r25, r1
    1356:	df 93       	push	r29
    1358:	cf 93       	push	r28
    135a:	1f 93       	push	r17
    135c:	0f 93       	push	r16
    135e:	ff 92       	push	r15
    1360:	ef 92       	push	r14
    1362:	19 2f       	mov	r17, r25
    1364:	98 7f       	andi	r25, 0xF8	; 248
    1366:	96 95       	lsr	r25
    1368:	e9 2f       	mov	r30, r25
    136a:	96 95       	lsr	r25
    136c:	96 95       	lsr	r25
    136e:	e9 0f       	add	r30, r25
    1370:	ff 27       	eor	r31, r31
    1372:	e2 51       	subi	r30, 0x12	; 18
    1374:	ff 4f       	sbci	r31, 0xFF	; 255
    1376:	99 27       	eor	r25, r25
    1378:	33 27       	eor	r19, r19
    137a:	ee 24       	eor	r14, r14
    137c:	ff 24       	eor	r15, r15
    137e:	a7 01       	movw	r20, r14
    1380:	e7 01       	movw	r28, r14
    1382:	05 90       	lpm	r0, Z+
    1384:	08 94       	sec
    1386:	07 94       	ror	r0
    1388:	28 f4       	brcc	.+10     	; 0x1394 <__ftoa_engine+0x80>
    138a:	36 0f       	add	r19, r22
    138c:	e7 1e       	adc	r14, r23
    138e:	f8 1e       	adc	r15, r24
    1390:	49 1f       	adc	r20, r25
    1392:	51 1d       	adc	r21, r1
    1394:	66 0f       	add	r22, r22
    1396:	77 1f       	adc	r23, r23
    1398:	88 1f       	adc	r24, r24
    139a:	99 1f       	adc	r25, r25
    139c:	06 94       	lsr	r0
    139e:	a1 f7       	brne	.-24     	; 0x1388 <__ftoa_engine+0x74>
    13a0:	05 90       	lpm	r0, Z+
    13a2:	07 94       	ror	r0
    13a4:	28 f4       	brcc	.+10     	; 0x13b0 <__ftoa_engine+0x9c>
    13a6:	e7 0e       	add	r14, r23
    13a8:	f8 1e       	adc	r15, r24
    13aa:	49 1f       	adc	r20, r25
    13ac:	56 1f       	adc	r21, r22
    13ae:	c1 1d       	adc	r28, r1
    13b0:	77 0f       	add	r23, r23
    13b2:	88 1f       	adc	r24, r24
    13b4:	99 1f       	adc	r25, r25
    13b6:	66 1f       	adc	r22, r22
    13b8:	06 94       	lsr	r0
    13ba:	a1 f7       	brne	.-24     	; 0x13a4 <__ftoa_engine+0x90>
    13bc:	05 90       	lpm	r0, Z+
    13be:	07 94       	ror	r0
    13c0:	28 f4       	brcc	.+10     	; 0x13cc <__ftoa_engine+0xb8>
    13c2:	f8 0e       	add	r15, r24
    13c4:	49 1f       	adc	r20, r25
    13c6:	56 1f       	adc	r21, r22
    13c8:	c7 1f       	adc	r28, r23
    13ca:	d1 1d       	adc	r29, r1
    13cc:	88 0f       	add	r24, r24
    13ce:	99 1f       	adc	r25, r25
    13d0:	66 1f       	adc	r22, r22
    13d2:	77 1f       	adc	r23, r23
    13d4:	06 94       	lsr	r0
    13d6:	a1 f7       	brne	.-24     	; 0x13c0 <__ftoa_engine+0xac>
    13d8:	05 90       	lpm	r0, Z+
    13da:	07 94       	ror	r0
    13dc:	20 f4       	brcc	.+8      	; 0x13e6 <__ftoa_engine+0xd2>
    13de:	49 0f       	add	r20, r25
    13e0:	56 1f       	adc	r21, r22
    13e2:	c7 1f       	adc	r28, r23
    13e4:	d8 1f       	adc	r29, r24
    13e6:	99 0f       	add	r25, r25
    13e8:	66 1f       	adc	r22, r22
    13ea:	77 1f       	adc	r23, r23
    13ec:	88 1f       	adc	r24, r24
    13ee:	06 94       	lsr	r0
    13f0:	a9 f7       	brne	.-22     	; 0x13dc <__ftoa_engine+0xc8>
    13f2:	84 91       	lpm	r24, Z
    13f4:	10 95       	com	r17
    13f6:	17 70       	andi	r17, 0x07	; 7
    13f8:	41 f0       	breq	.+16     	; 0x140a <__ftoa_engine+0xf6>
    13fa:	d6 95       	lsr	r29
    13fc:	c7 95       	ror	r28
    13fe:	57 95       	ror	r21
    1400:	47 95       	ror	r20
    1402:	f7 94       	ror	r15
    1404:	e7 94       	ror	r14
    1406:	1a 95       	dec	r17
    1408:	c1 f7       	brne	.-16     	; 0x13fa <__ftoa_engine+0xe6>
    140a:	e4 e9       	ldi	r30, 0x94	; 148
    140c:	f0 e0       	ldi	r31, 0x00	; 0
    140e:	68 94       	set
    1410:	15 90       	lpm	r1, Z+
    1412:	15 91       	lpm	r17, Z+
    1414:	35 91       	lpm	r19, Z+
    1416:	65 91       	lpm	r22, Z+
    1418:	95 91       	lpm	r25, Z+
    141a:	05 90       	lpm	r0, Z+
    141c:	7f e2       	ldi	r23, 0x2F	; 47
    141e:	73 95       	inc	r23
    1420:	e1 18       	sub	r14, r1
    1422:	f1 0a       	sbc	r15, r17
    1424:	43 0b       	sbc	r20, r19
    1426:	56 0b       	sbc	r21, r22
    1428:	c9 0b       	sbc	r28, r25
    142a:	d0 09       	sbc	r29, r0
    142c:	c0 f7       	brcc	.-16     	; 0x141e <__ftoa_engine+0x10a>
    142e:	e1 0c       	add	r14, r1
    1430:	f1 1e       	adc	r15, r17
    1432:	43 1f       	adc	r20, r19
    1434:	56 1f       	adc	r21, r22
    1436:	c9 1f       	adc	r28, r25
    1438:	d0 1d       	adc	r29, r0
    143a:	7e f4       	brtc	.+30     	; 0x145a <__ftoa_engine+0x146>
    143c:	70 33       	cpi	r23, 0x30	; 48
    143e:	11 f4       	brne	.+4      	; 0x1444 <__ftoa_engine+0x130>
    1440:	8a 95       	dec	r24
    1442:	e6 cf       	rjmp	.-52     	; 0x1410 <__ftoa_engine+0xfc>
    1444:	e8 94       	clt
    1446:	01 50       	subi	r16, 0x01	; 1
    1448:	30 f0       	brcs	.+12     	; 0x1456 <__ftoa_engine+0x142>
    144a:	08 0f       	add	r16, r24
    144c:	0a f4       	brpl	.+2      	; 0x1450 <__ftoa_engine+0x13c>
    144e:	00 27       	eor	r16, r16
    1450:	02 17       	cp	r16, r18
    1452:	08 f4       	brcc	.+2      	; 0x1456 <__ftoa_engine+0x142>
    1454:	20 2f       	mov	r18, r16
    1456:	23 95       	inc	r18
    1458:	02 2f       	mov	r16, r18
    145a:	7a 33       	cpi	r23, 0x3A	; 58
    145c:	28 f0       	brcs	.+10     	; 0x1468 <__ftoa_engine+0x154>
    145e:	79 e3       	ldi	r23, 0x39	; 57
    1460:	7d 93       	st	X+, r23
    1462:	2a 95       	dec	r18
    1464:	e9 f7       	brne	.-6      	; 0x1460 <__ftoa_engine+0x14c>
    1466:	10 c0       	rjmp	.+32     	; 0x1488 <__ftoa_engine+0x174>
    1468:	7d 93       	st	X+, r23
    146a:	2a 95       	dec	r18
    146c:	89 f6       	brne	.-94     	; 0x1410 <__ftoa_engine+0xfc>
    146e:	06 94       	lsr	r0
    1470:	97 95       	ror	r25
    1472:	67 95       	ror	r22
    1474:	37 95       	ror	r19
    1476:	17 95       	ror	r17
    1478:	17 94       	ror	r1
    147a:	e1 18       	sub	r14, r1
    147c:	f1 0a       	sbc	r15, r17
    147e:	43 0b       	sbc	r20, r19
    1480:	56 0b       	sbc	r21, r22
    1482:	c9 0b       	sbc	r28, r25
    1484:	d0 09       	sbc	r29, r0
    1486:	98 f0       	brcs	.+38     	; 0x14ae <__ftoa_engine+0x19a>
    1488:	23 95       	inc	r18
    148a:	7e 91       	ld	r23, -X
    148c:	73 95       	inc	r23
    148e:	7a 33       	cpi	r23, 0x3A	; 58
    1490:	08 f0       	brcs	.+2      	; 0x1494 <__ftoa_engine+0x180>
    1492:	70 e3       	ldi	r23, 0x30	; 48
    1494:	7c 93       	st	X, r23
    1496:	20 13       	cpse	r18, r16
    1498:	b8 f7       	brcc	.-18     	; 0x1488 <__ftoa_engine+0x174>
    149a:	7e 91       	ld	r23, -X
    149c:	70 61       	ori	r23, 0x10	; 16
    149e:	7d 93       	st	X+, r23
    14a0:	30 f0       	brcs	.+12     	; 0x14ae <__ftoa_engine+0x19a>
    14a2:	83 95       	inc	r24
    14a4:	71 e3       	ldi	r23, 0x31	; 49
    14a6:	7d 93       	st	X+, r23
    14a8:	70 e3       	ldi	r23, 0x30	; 48
    14aa:	2a 95       	dec	r18
    14ac:	e1 f7       	brne	.-8      	; 0x14a6 <__ftoa_engine+0x192>
    14ae:	11 24       	eor	r1, r1
    14b0:	ef 90       	pop	r14
    14b2:	ff 90       	pop	r15
    14b4:	0f 91       	pop	r16
    14b6:	1f 91       	pop	r17
    14b8:	cf 91       	pop	r28
    14ba:	df 91       	pop	r29
    14bc:	99 27       	eor	r25, r25
    14be:	87 fd       	sbrc	r24, 7
    14c0:	90 95       	com	r25
    14c2:	08 95       	ret

000014c4 <strnlen_P>:
    14c4:	fc 01       	movw	r30, r24
    14c6:	05 90       	lpm	r0, Z+
    14c8:	61 50       	subi	r22, 0x01	; 1
    14ca:	70 40       	sbci	r23, 0x00	; 0
    14cc:	01 10       	cpse	r0, r1
    14ce:	d8 f7       	brcc	.-10     	; 0x14c6 <strnlen_P+0x2>
    14d0:	80 95       	com	r24
    14d2:	90 95       	com	r25
    14d4:	8e 0f       	add	r24, r30
    14d6:	9f 1f       	adc	r25, r31
    14d8:	08 95       	ret

000014da <strnlen>:
    14da:	fc 01       	movw	r30, r24
    14dc:	61 50       	subi	r22, 0x01	; 1
    14de:	70 40       	sbci	r23, 0x00	; 0
    14e0:	01 90       	ld	r0, Z+
    14e2:	01 10       	cpse	r0, r1
    14e4:	d8 f7       	brcc	.-10     	; 0x14dc <strnlen+0x2>
    14e6:	80 95       	com	r24
    14e8:	90 95       	com	r25
    14ea:	8e 0f       	add	r24, r30
    14ec:	9f 1f       	adc	r25, r31
    14ee:	08 95       	ret

000014f0 <fputc>:
    14f0:	0f 93       	push	r16
    14f2:	1f 93       	push	r17
    14f4:	cf 93       	push	r28
    14f6:	df 93       	push	r29
    14f8:	fb 01       	movw	r30, r22
    14fa:	23 81       	ldd	r18, Z+3	; 0x03
    14fc:	21 fd       	sbrc	r18, 1
    14fe:	03 c0       	rjmp	.+6      	; 0x1506 <fputc+0x16>
    1500:	8f ef       	ldi	r24, 0xFF	; 255
    1502:	9f ef       	ldi	r25, 0xFF	; 255
    1504:	28 c0       	rjmp	.+80     	; 0x1556 <fputc+0x66>
    1506:	22 ff       	sbrs	r18, 2
    1508:	16 c0       	rjmp	.+44     	; 0x1536 <fputc+0x46>
    150a:	46 81       	ldd	r20, Z+6	; 0x06
    150c:	57 81       	ldd	r21, Z+7	; 0x07
    150e:	24 81       	ldd	r18, Z+4	; 0x04
    1510:	35 81       	ldd	r19, Z+5	; 0x05
    1512:	42 17       	cp	r20, r18
    1514:	53 07       	cpc	r21, r19
    1516:	44 f4       	brge	.+16     	; 0x1528 <fputc+0x38>
    1518:	a0 81       	ld	r26, Z
    151a:	b1 81       	ldd	r27, Z+1	; 0x01
    151c:	9d 01       	movw	r18, r26
    151e:	2f 5f       	subi	r18, 0xFF	; 255
    1520:	3f 4f       	sbci	r19, 0xFF	; 255
    1522:	31 83       	std	Z+1, r19	; 0x01
    1524:	20 83       	st	Z, r18
    1526:	8c 93       	st	X, r24
    1528:	26 81       	ldd	r18, Z+6	; 0x06
    152a:	37 81       	ldd	r19, Z+7	; 0x07
    152c:	2f 5f       	subi	r18, 0xFF	; 255
    152e:	3f 4f       	sbci	r19, 0xFF	; 255
    1530:	37 83       	std	Z+7, r19	; 0x07
    1532:	26 83       	std	Z+6, r18	; 0x06
    1534:	10 c0       	rjmp	.+32     	; 0x1556 <fputc+0x66>
    1536:	eb 01       	movw	r28, r22
    1538:	09 2f       	mov	r16, r25
    153a:	18 2f       	mov	r17, r24
    153c:	00 84       	ldd	r0, Z+8	; 0x08
    153e:	f1 85       	ldd	r31, Z+9	; 0x09
    1540:	e0 2d       	mov	r30, r0
    1542:	09 95       	icall
    1544:	89 2b       	or	r24, r25
    1546:	e1 f6       	brne	.-72     	; 0x1500 <fputc+0x10>
    1548:	8e 81       	ldd	r24, Y+6	; 0x06
    154a:	9f 81       	ldd	r25, Y+7	; 0x07
    154c:	01 96       	adiw	r24, 0x01	; 1
    154e:	9f 83       	std	Y+7, r25	; 0x07
    1550:	8e 83       	std	Y+6, r24	; 0x06
    1552:	81 2f       	mov	r24, r17
    1554:	90 2f       	mov	r25, r16
    1556:	df 91       	pop	r29
    1558:	cf 91       	pop	r28
    155a:	1f 91       	pop	r17
    155c:	0f 91       	pop	r16
    155e:	08 95       	ret

00001560 <printf>:
    1560:	cf 93       	push	r28
    1562:	df 93       	push	r29
    1564:	cd b7       	in	r28, 0x3d	; 61
    1566:	de b7       	in	r29, 0x3e	; 62
    1568:	ae 01       	movw	r20, r28
    156a:	4b 5f       	subi	r20, 0xFB	; 251
    156c:	5f 4f       	sbci	r21, 0xFF	; 255
    156e:	fa 01       	movw	r30, r20
    1570:	61 91       	ld	r22, Z+
    1572:	71 91       	ld	r23, Z+
    1574:	af 01       	movw	r20, r30
    1576:	80 91 ba 01 	lds	r24, 0x01BA
    157a:	90 91 bb 01 	lds	r25, 0x01BB
    157e:	42 db       	rcall	.-2428   	; 0xc04 <vfprintf>
    1580:	df 91       	pop	r29
    1582:	cf 91       	pop	r28
    1584:	08 95       	ret

00001586 <puts>:
    1586:	0f 93       	push	r16
    1588:	1f 93       	push	r17
    158a:	cf 93       	push	r28
    158c:	df 93       	push	r29
    158e:	e0 91 ba 01 	lds	r30, 0x01BA
    1592:	f0 91 bb 01 	lds	r31, 0x01BB
    1596:	23 81       	ldd	r18, Z+3	; 0x03
    1598:	21 ff       	sbrs	r18, 1
    159a:	1b c0       	rjmp	.+54     	; 0x15d2 <puts+0x4c>
    159c:	8c 01       	movw	r16, r24
    159e:	d0 e0       	ldi	r29, 0x00	; 0
    15a0:	c0 e0       	ldi	r28, 0x00	; 0
    15a2:	f8 01       	movw	r30, r16
    15a4:	81 91       	ld	r24, Z+
    15a6:	8f 01       	movw	r16, r30
    15a8:	60 91 ba 01 	lds	r22, 0x01BA
    15ac:	70 91 bb 01 	lds	r23, 0x01BB
    15b0:	db 01       	movw	r26, r22
    15b2:	18 96       	adiw	r26, 0x08	; 8
    15b4:	ed 91       	ld	r30, X+
    15b6:	fc 91       	ld	r31, X
    15b8:	19 97       	sbiw	r26, 0x09	; 9
    15ba:	88 23       	and	r24, r24
    15bc:	31 f0       	breq	.+12     	; 0x15ca <puts+0x44>
    15be:	09 95       	icall
    15c0:	89 2b       	or	r24, r25
    15c2:	79 f3       	breq	.-34     	; 0x15a2 <puts+0x1c>
    15c4:	df ef       	ldi	r29, 0xFF	; 255
    15c6:	cf ef       	ldi	r28, 0xFF	; 255
    15c8:	ec cf       	rjmp	.-40     	; 0x15a2 <puts+0x1c>
    15ca:	8a e0       	ldi	r24, 0x0A	; 10
    15cc:	09 95       	icall
    15ce:	89 2b       	or	r24, r25
    15d0:	19 f0       	breq	.+6      	; 0x15d8 <puts+0x52>
    15d2:	8f ef       	ldi	r24, 0xFF	; 255
    15d4:	9f ef       	ldi	r25, 0xFF	; 255
    15d6:	02 c0       	rjmp	.+4      	; 0x15dc <puts+0x56>
    15d8:	8d 2f       	mov	r24, r29
    15da:	9c 2f       	mov	r25, r28
    15dc:	df 91       	pop	r29
    15de:	cf 91       	pop	r28
    15e0:	1f 91       	pop	r17
    15e2:	0f 91       	pop	r16
    15e4:	08 95       	ret

000015e6 <sprintf>:
    15e6:	0f 93       	push	r16
    15e8:	1f 93       	push	r17
    15ea:	cf 93       	push	r28
    15ec:	df 93       	push	r29
    15ee:	cd b7       	in	r28, 0x3d	; 61
    15f0:	de b7       	in	r29, 0x3e	; 62
    15f2:	2e 97       	sbiw	r28, 0x0e	; 14
    15f4:	0f b6       	in	r0, 0x3f	; 63
    15f6:	f8 94       	cli
    15f8:	de bf       	out	0x3e, r29	; 62
    15fa:	0f be       	out	0x3f, r0	; 63
    15fc:	cd bf       	out	0x3d, r28	; 61
    15fe:	0d 89       	ldd	r16, Y+21	; 0x15
    1600:	1e 89       	ldd	r17, Y+22	; 0x16
    1602:	86 e0       	ldi	r24, 0x06	; 6
    1604:	8c 83       	std	Y+4, r24	; 0x04
    1606:	1a 83       	std	Y+2, r17	; 0x02
    1608:	09 83       	std	Y+1, r16	; 0x01
    160a:	8f ef       	ldi	r24, 0xFF	; 255
    160c:	9f e7       	ldi	r25, 0x7F	; 127
    160e:	9e 83       	std	Y+6, r25	; 0x06
    1610:	8d 83       	std	Y+5, r24	; 0x05
    1612:	ae 01       	movw	r20, r28
    1614:	47 5e       	subi	r20, 0xE7	; 231
    1616:	5f 4f       	sbci	r21, 0xFF	; 255
    1618:	6f 89       	ldd	r22, Y+23	; 0x17
    161a:	78 8d       	ldd	r23, Y+24	; 0x18
    161c:	ce 01       	movw	r24, r28
    161e:	01 96       	adiw	r24, 0x01	; 1
    1620:	f1 da       	rcall	.-2590   	; 0xc04 <vfprintf>
    1622:	2f 81       	ldd	r18, Y+7	; 0x07
    1624:	38 85       	ldd	r19, Y+8	; 0x08
    1626:	f8 01       	movw	r30, r16
    1628:	e2 0f       	add	r30, r18
    162a:	f3 1f       	adc	r31, r19
    162c:	10 82       	st	Z, r1
    162e:	2e 96       	adiw	r28, 0x0e	; 14
    1630:	0f b6       	in	r0, 0x3f	; 63
    1632:	f8 94       	cli
    1634:	de bf       	out	0x3e, r29	; 62
    1636:	0f be       	out	0x3f, r0	; 63
    1638:	cd bf       	out	0x3d, r28	; 61
    163a:	df 91       	pop	r29
    163c:	cf 91       	pop	r28
    163e:	1f 91       	pop	r17
    1640:	0f 91       	pop	r16
    1642:	08 95       	ret

00001644 <__ultoa_invert>:
    1644:	fa 01       	movw	r30, r20
    1646:	aa 27       	eor	r26, r26
    1648:	28 30       	cpi	r18, 0x08	; 8
    164a:	51 f1       	breq	.+84     	; 0x16a0 <__ultoa_invert+0x5c>
    164c:	20 31       	cpi	r18, 0x10	; 16
    164e:	81 f1       	breq	.+96     	; 0x16b0 <__ultoa_invert+0x6c>
    1650:	e8 94       	clt
    1652:	6f 93       	push	r22
    1654:	6e 7f       	andi	r22, 0xFE	; 254
    1656:	6e 5f       	subi	r22, 0xFE	; 254
    1658:	7f 4f       	sbci	r23, 0xFF	; 255
    165a:	8f 4f       	sbci	r24, 0xFF	; 255
    165c:	9f 4f       	sbci	r25, 0xFF	; 255
    165e:	af 4f       	sbci	r26, 0xFF	; 255
    1660:	b1 e0       	ldi	r27, 0x01	; 1
    1662:	3e d0       	rcall	.+124    	; 0x16e0 <__ultoa_invert+0x9c>
    1664:	b4 e0       	ldi	r27, 0x04	; 4
    1666:	3c d0       	rcall	.+120    	; 0x16e0 <__ultoa_invert+0x9c>
    1668:	67 0f       	add	r22, r23
    166a:	78 1f       	adc	r23, r24
    166c:	89 1f       	adc	r24, r25
    166e:	9a 1f       	adc	r25, r26
    1670:	a1 1d       	adc	r26, r1
    1672:	68 0f       	add	r22, r24
    1674:	79 1f       	adc	r23, r25
    1676:	8a 1f       	adc	r24, r26
    1678:	91 1d       	adc	r25, r1
    167a:	a1 1d       	adc	r26, r1
    167c:	6a 0f       	add	r22, r26
    167e:	71 1d       	adc	r23, r1
    1680:	81 1d       	adc	r24, r1
    1682:	91 1d       	adc	r25, r1
    1684:	a1 1d       	adc	r26, r1
    1686:	20 d0       	rcall	.+64     	; 0x16c8 <__ultoa_invert+0x84>
    1688:	09 f4       	brne	.+2      	; 0x168c <__ultoa_invert+0x48>
    168a:	68 94       	set
    168c:	3f 91       	pop	r19
    168e:	2a e0       	ldi	r18, 0x0A	; 10
    1690:	26 9f       	mul	r18, r22
    1692:	11 24       	eor	r1, r1
    1694:	30 19       	sub	r19, r0
    1696:	30 5d       	subi	r19, 0xD0	; 208
    1698:	31 93       	st	Z+, r19
    169a:	de f6       	brtc	.-74     	; 0x1652 <__ultoa_invert+0xe>
    169c:	cf 01       	movw	r24, r30
    169e:	08 95       	ret
    16a0:	46 2f       	mov	r20, r22
    16a2:	47 70       	andi	r20, 0x07	; 7
    16a4:	40 5d       	subi	r20, 0xD0	; 208
    16a6:	41 93       	st	Z+, r20
    16a8:	b3 e0       	ldi	r27, 0x03	; 3
    16aa:	0f d0       	rcall	.+30     	; 0x16ca <__ultoa_invert+0x86>
    16ac:	c9 f7       	brne	.-14     	; 0x16a0 <__ultoa_invert+0x5c>
    16ae:	f6 cf       	rjmp	.-20     	; 0x169c <__ultoa_invert+0x58>
    16b0:	46 2f       	mov	r20, r22
    16b2:	4f 70       	andi	r20, 0x0F	; 15
    16b4:	40 5d       	subi	r20, 0xD0	; 208
    16b6:	4a 33       	cpi	r20, 0x3A	; 58
    16b8:	18 f0       	brcs	.+6      	; 0x16c0 <__ultoa_invert+0x7c>
    16ba:	49 5d       	subi	r20, 0xD9	; 217
    16bc:	31 fd       	sbrc	r19, 1
    16be:	40 52       	subi	r20, 0x20	; 32
    16c0:	41 93       	st	Z+, r20
    16c2:	02 d0       	rcall	.+4      	; 0x16c8 <__ultoa_invert+0x84>
    16c4:	a9 f7       	brne	.-22     	; 0x16b0 <__ultoa_invert+0x6c>
    16c6:	ea cf       	rjmp	.-44     	; 0x169c <__ultoa_invert+0x58>
    16c8:	b4 e0       	ldi	r27, 0x04	; 4
    16ca:	a6 95       	lsr	r26
    16cc:	97 95       	ror	r25
    16ce:	87 95       	ror	r24
    16d0:	77 95       	ror	r23
    16d2:	67 95       	ror	r22
    16d4:	ba 95       	dec	r27
    16d6:	c9 f7       	brne	.-14     	; 0x16ca <__ultoa_invert+0x86>
    16d8:	00 97       	sbiw	r24, 0x00	; 0
    16da:	61 05       	cpc	r22, r1
    16dc:	71 05       	cpc	r23, r1
    16de:	08 95       	ret
    16e0:	9b 01       	movw	r18, r22
    16e2:	ac 01       	movw	r20, r24
    16e4:	0a 2e       	mov	r0, r26
    16e6:	06 94       	lsr	r0
    16e8:	57 95       	ror	r21
    16ea:	47 95       	ror	r20
    16ec:	37 95       	ror	r19
    16ee:	27 95       	ror	r18
    16f0:	ba 95       	dec	r27
    16f2:	c9 f7       	brne	.-14     	; 0x16e6 <__ultoa_invert+0xa2>
    16f4:	62 0f       	add	r22, r18
    16f6:	73 1f       	adc	r23, r19
    16f8:	84 1f       	adc	r24, r20
    16fa:	95 1f       	adc	r25, r21
    16fc:	a0 1d       	adc	r26, r0
    16fe:	08 95       	ret

00001700 <_exit>:
    1700:	f8 94       	cli

00001702 <__stop_program>:
    1702:	ff cf       	rjmp	.-2      	; 0x1702 <__stop_program>
